{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ComputeStacks Documentation \u00b6 ComputeStacks is a commercial container orchestration and hosting platform for service providers. View our current API Documentation . Join us either on Slack , or Matrix . See our Community Page for more info. Access our free online demo . Schedule a call for a guided demo and to see our backend interface. Frequently Asked Questions \u00b6 Architecture Overview How To Install View our Pricing Understanding our Billing System and WHMCS integration. See how we integrate with cPanel .","title":"Home"},{"location":"#computestacks-documentation","text":"ComputeStacks is a commercial container orchestration and hosting platform for service providers. View our current API Documentation . Join us either on Slack , or Matrix . See our Community Page for more info. Access our free online demo . Schedule a call for a guided demo and to see our backend interface.","title":"ComputeStacks Documentation"},{"location":"#frequently-asked-questions","text":"Architecture Overview How To Install View our Pricing Understanding our Billing System and WHMCS integration. See how we integrate with cPanel .","title":"Frequently Asked Questions"},{"location":"admin_guide/","text":"Admin Guide \u00b6 Welcome to the admin guide for ComputeStacks! Getting Help \u00b6 Join us either on Slack , or Matrix . See our Community Page for more info. View all our support channels.","title":"Overview"},{"location":"admin_guide/#admin-guide","text":"Welcome to the admin guide for ComputeStacks!","title":"Admin Guide"},{"location":"admin_guide/#getting-help","text":"Join us either on Slack , or Matrix . See our Community Page for more info. View all our support channels.","title":"Getting Help"},{"location":"admin_guide/billing/","text":"Billing Overview \u00b6 ComputeStacks is a metered (post-pay) system, which means all of our resources are either shown as per-hour , or per-unit . We perform all billing calculation based on a user\u2019s assigned billing plan , and report that to your billing system . Usage Calculation \u00b6 ComputeStacks uses a simple realtime price strategy for recording billable usage for consumed resources. This is in contrast to more traditional billing systems which determine pricing at the time an invoice is generated, not when the resource was consumed. Each hour, ComputeStacks pulls the current usage across all subscriptions. At the same time, it performs a real time price lookup based on the rules defined in their billing plan. Because the price is determined in real time and stored alongside the quantity used, any change you make in the future will not adjust their previously stored usage.","title":"Overview"},{"location":"admin_guide/billing/#billing-overview","text":"ComputeStacks is a metered (post-pay) system, which means all of our resources are either shown as per-hour , or per-unit . We perform all billing calculation based on a user\u2019s assigned billing plan , and report that to your billing system .","title":"Billing Overview"},{"location":"admin_guide/billing/#usage-calculation","text":"ComputeStacks uses a simple realtime price strategy for recording billable usage for consumed resources. This is in contrast to more traditional billing systems which determine pricing at the time an invoice is generated, not when the resource was consumed. Each hour, ComputeStacks pulls the current usage across all subscriptions. At the same time, it performs a real time price lookup based on the rules defined in their billing plan. Because the price is determined in real time and stored alongside the quantity used, any change you make in the future will not adjust their previously stored usage.","title":"Usage Calculation"},{"location":"admin_guide/billing/billing_plans/","text":"Billing Plans \u00b6 ComputeStacks uses billing plans as a rule set for determining the real time price for a given resource. We also use this for generating the price matrix on order forms. You can create as many billing plans as you want, but only one may the default. This is useful for creating custom or special pricing for a different set of users. If no price rule exists for a given scenario (e.g. currency + region + quantity) , ComputeStacks will default to a price of 0.00. Products & Packages \u00b6 A product is a separate object from Billing Plans, which allow you to define it once, and use it in multiple plans. Creating a Product \u00b6 Products are the base for packages, so you must define this first prior to creating a package. External ID This is available in WebHooks and API Calls. This is generally used by billing integrations to identify this product. Package or Metered Resource : Package: Container package Metered Resource: Bandwidth, Storage. Resource Only applies of \u2018Kind\u2019 is \u2018Metered Resource\u2019 This tells ComputeStacks what kind of resource this is. When we\u2019re calculating pricing on the hour, we will use this value to find the price for a given resource. * Unit This should almost always be 1. Unit Type CORE for CPU , MB for Memory, and GB for bandwidth and storage. Package Settings \u00b6 After creating a product, and selecting Package as the product kind, you will have the ability to customize the package resource. CPU How many CPU Cores to assign. These can be fractional units of 0.25 . Memory Memory is stored in MB . Volume Storage Anything over this amount will be charged at the current storage rate set in the users billing plan. Temporary Disk Temporary disk is all storage used by the container, less any volume usage. Anything over this amount will be charged at the current temporary disk rate set in the users billing plan. Bandwidth Up to this amount is included, anything else will be charged as overage. Backup Storage Anything beyond this will be charged as overage. Billing Phases \u00b6 Phases are a way to describe the current state of a subscription. There are three possibilities: Trial, Discount, and Final. Phases only move forward and never backwards. The transition to the next phase is automatic and based on the duration of that phase. The duration defined in the phase is the maximum amount of time the subscription will stay in the phase. The actual time frame will depend on the billing_start field for a given user. The billing start is automatically set when a user places their first order. This can also be set manually by an administrator at any time. For example, if a trial phase is set to last for 14 days and a user placed their first subscription for a different order 7 days ago, they will get a free trial for 7 more days. So for Trial and Discount phases, the time frame not only applies to how long a given subscription will be in that phase, but also the total amount of time they have access to that phase. Pricing \u00b6 Prices are unique to their parent phase, and can be customized for specific regions, currencies, and quantity. There is a global default currency set during the installation process, however each user can have a different currency set by Administrators. This, along with billing plans, offers the ability to support multiple currencies under the same installation. Tiers \u00b6 By adding a maximum allowed quantity , you can create tiered pricing. This is popular for storage and bandwidth.","title":"Billing Plans"},{"location":"admin_guide/billing/billing_plans/#billing-plans","text":"ComputeStacks uses billing plans as a rule set for determining the real time price for a given resource. We also use this for generating the price matrix on order forms. You can create as many billing plans as you want, but only one may the default. This is useful for creating custom or special pricing for a different set of users. If no price rule exists for a given scenario (e.g. currency + region + quantity) , ComputeStacks will default to a price of 0.00.","title":"Billing Plans"},{"location":"admin_guide/billing/billing_plans/#products-packages","text":"A product is a separate object from Billing Plans, which allow you to define it once, and use it in multiple plans.","title":"Products &amp; Packages"},{"location":"admin_guide/billing/billing_plans/#creating-a-product","text":"Products are the base for packages, so you must define this first prior to creating a package. External ID This is available in WebHooks and API Calls. This is generally used by billing integrations to identify this product. Package or Metered Resource : Package: Container package Metered Resource: Bandwidth, Storage. Resource Only applies of \u2018Kind\u2019 is \u2018Metered Resource\u2019 This tells ComputeStacks what kind of resource this is. When we\u2019re calculating pricing on the hour, we will use this value to find the price for a given resource. * Unit This should almost always be 1. Unit Type CORE for CPU , MB for Memory, and GB for bandwidth and storage.","title":"Creating a Product"},{"location":"admin_guide/billing/billing_plans/#package-settings","text":"After creating a product, and selecting Package as the product kind, you will have the ability to customize the package resource. CPU How many CPU Cores to assign. These can be fractional units of 0.25 . Memory Memory is stored in MB . Volume Storage Anything over this amount will be charged at the current storage rate set in the users billing plan. Temporary Disk Temporary disk is all storage used by the container, less any volume usage. Anything over this amount will be charged at the current temporary disk rate set in the users billing plan. Bandwidth Up to this amount is included, anything else will be charged as overage. Backup Storage Anything beyond this will be charged as overage.","title":"Package Settings"},{"location":"admin_guide/billing/billing_plans/#billing-phases","text":"Phases are a way to describe the current state of a subscription. There are three possibilities: Trial, Discount, and Final. Phases only move forward and never backwards. The transition to the next phase is automatic and based on the duration of that phase. The duration defined in the phase is the maximum amount of time the subscription will stay in the phase. The actual time frame will depend on the billing_start field for a given user. The billing start is automatically set when a user places their first order. This can also be set manually by an administrator at any time. For example, if a trial phase is set to last for 14 days and a user placed their first subscription for a different order 7 days ago, they will get a free trial for 7 more days. So for Trial and Discount phases, the time frame not only applies to how long a given subscription will be in that phase, but also the total amount of time they have access to that phase.","title":"Billing Phases"},{"location":"admin_guide/billing/billing_plans/#pricing","text":"Prices are unique to their parent phase, and can be customized for specific regions, currencies, and quantity. There is a global default currency set during the installation process, however each user can have a different currency set by Administrators. This, along with billing plans, offers the ability to support multiple currencies under the same installation.","title":"Pricing"},{"location":"admin_guide/billing/billing_plans/#tiers","text":"By adding a maximum allowed quantity , you can create tiered pricing. This is popular for storage and bandwidth.","title":"Tiers"},{"location":"admin_guide/billing/free_trial/","text":"Creating Free Trials & Discount Phases \u00b6 Overview \u00b6 ComputeStacks supports both free trials, and discount periods for all services in a billing plan. Given the following billing plan, we have a free trial for 7 days, and then a 3 month discounted price. When viewing on the order form, the customer will see all 3 pricing phases so they know exactly what they will pay, and when. Calculating The Start Date \u00b6 Both Free Trials and Discount Phases will only apply to new customers . To make this available to an existing customer , or to extend their free trial and discount periods, you can manually edit the user and change the date of the field Billing Start . The Billing Start field will be blank for new signups, and will only be set upon their first order. This means that if a user signs up on August 1st but does not order anything, on December 1st they will still have the free trial and discount periods available. Creating A Pricing Period \u00b6 Navigate to the billing plan and click Add Phase next to the product. Select either Free Trial or Discount . Duration is how long the subscription will stay in that period. We support hours, days, months, and years. After the duration has passed, the subscription will automatically move to the next phase. This may be either a discount phase (if coming from a free trial), or the final phase.","title":"Setup Free Trials"},{"location":"admin_guide/billing/free_trial/#creating-free-trials-discount-phases","text":"","title":"Creating Free Trials &amp; Discount Phases"},{"location":"admin_guide/billing/free_trial/#overview","text":"ComputeStacks supports both free trials, and discount periods for all services in a billing plan. Given the following billing plan, we have a free trial for 7 days, and then a 3 month discounted price. When viewing on the order form, the customer will see all 3 pricing phases so they know exactly what they will pay, and when.","title":"Overview"},{"location":"admin_guide/billing/free_trial/#calculating-the-start-date","text":"Both Free Trials and Discount Phases will only apply to new customers . To make this available to an existing customer , or to extend their free trial and discount periods, you can manually edit the user and change the date of the field Billing Start . The Billing Start field will be blank for new signups, and will only be set upon their first order. This means that if a user signs up on August 1st but does not order anything, on December 1st they will still have the free trial and discount periods available.","title":"Calculating The Start Date"},{"location":"admin_guide/billing/free_trial/#creating-a-pricing-period","text":"Navigate to the billing plan and click Add Phase next to the product. Select either Free Trial or Discount . Duration is how long the subscription will stay in that period. We support hours, days, months, and years. After the duration has passed, the subscription will automatically move to the next phase. This may be either a discount phase (if coming from a free trial), or the final phase.","title":"Creating A Pricing Period"},{"location":"admin_guide/billing/integrations/","text":"Invoicing & Payments \u00b6 While ComputeStacks generates all of the billing data, we do not directly handle payments or generating invoices . We rely on third party integrations for this part of the billing process. This affords us the flexibility to work in a variety of environments. Integrations \u00b6 Currently, we only offer a billing integration with WHMCS . Use something else? Please reach out to our team and we can discuss integration options. Using WebHooks \u00b6 Using our Webhooks is a popular alternative for providers with a custom control panel & billing system. With this integration option, you can onboard customers how you normally would in your system, and using SSO, log them into ComputeStacks. Then on each billable event, we will send a webhook to your system to process that usage.","title":"Handle Invoicing & Payments"},{"location":"admin_guide/billing/integrations/#invoicing-payments","text":"While ComputeStacks generates all of the billing data, we do not directly handle payments or generating invoices . We rely on third party integrations for this part of the billing process. This affords us the flexibility to work in a variety of environments.","title":"Invoicing &amp; Payments"},{"location":"admin_guide/billing/integrations/#integrations","text":"Currently, we only offer a billing integration with WHMCS . Use something else? Please reach out to our team and we can discuss integration options.","title":"Integrations"},{"location":"admin_guide/billing/integrations/#using-webhooks","text":"Using our Webhooks is a popular alternative for providers with a custom control panel & billing system. With this integration option, you can onboard customers how you normally would in your system, and using SSO, log them into ComputeStacks. Then on each billable event, we will send a webhook to your system to process that usage.","title":"Using WebHooks"},{"location":"admin_guide/cluster_management/change_region_name/","text":"Renaming a Region \u00b6 The process of renaming a region requires a few addition steps beyond simply changing the name in the web administrator. This is because we use this to target our key/value store on the nodes, and so that will need to be updated manually. Step 1: Bring Down Cluster Manager \u00b6 Stop Agent \u00b6 SSH into each node and run: systemctl stop cs-agent Break Cluster \u00b6 You will need to determine the current cluster leader before proceeding. To do so, on one of the nodes run consul info . Under the consul section, you will see the leader. On all nodes, except the leader, run the following consul leave systemctl stop consul Verify all members have been evicted by running consul members on the leader node. Evict the leader consul leave systemctl stop consul Step 2: Update Name \u00b6 On each node, update the datacenter name to match the name of the new region: The datacenter name should be one word, all lower case. sed -i 's/\"datacenter\":.*/\"datacenter\":\"NEW-NAME\",/g' /etc/consul/config.json Step 3: Bring Up Cluster \u00b6 On the leader node, bring up consul with systemctl start consul . Use consul monitor and consul info to ensure that no errors exist. Upon successful boot, run that same command across all nodes in your cluster Verify all members have joined with consul members Finally, run systemctl start cs-agent on all nodes in the cluster. Step 4: Rename Region in ComputeStacks \u00b6 Rename the region in ComputeStacks.","title":"Rename Region"},{"location":"admin_guide/cluster_management/change_region_name/#renaming-a-region","text":"The process of renaming a region requires a few addition steps beyond simply changing the name in the web administrator. This is because we use this to target our key/value store on the nodes, and so that will need to be updated manually.","title":"Renaming a Region"},{"location":"admin_guide/cluster_management/change_region_name/#step-1-bring-down-cluster-manager","text":"","title":"Step 1: Bring Down Cluster Manager"},{"location":"admin_guide/cluster_management/change_region_name/#stop-agent","text":"SSH into each node and run: systemctl stop cs-agent","title":"Stop Agent"},{"location":"admin_guide/cluster_management/change_region_name/#break-cluster","text":"You will need to determine the current cluster leader before proceeding. To do so, on one of the nodes run consul info . Under the consul section, you will see the leader. On all nodes, except the leader, run the following consul leave systemctl stop consul Verify all members have been evicted by running consul members on the leader node. Evict the leader consul leave systemctl stop consul","title":"Break Cluster"},{"location":"admin_guide/cluster_management/change_region_name/#step-2-update-name","text":"On each node, update the datacenter name to match the name of the new region: The datacenter name should be one word, all lower case. sed -i 's/\"datacenter\":.*/\"datacenter\":\"NEW-NAME\",/g' /etc/consul/config.json","title":"Step 2: Update Name"},{"location":"admin_guide/cluster_management/change_region_name/#step-3-bring-up-cluster","text":"On the leader node, bring up consul with systemctl start consul . Use consul monitor and consul info to ensure that no errors exist. Upon successful boot, run that same command across all nodes in your cluster Verify all members have joined with consul members Finally, run systemctl start cs-agent on all nodes in the cluster.","title":"Step 3: Bring Up Cluster"},{"location":"admin_guide/cluster_management/change_region_name/#step-4-rename-region-in-computestacks","text":"Rename the region in ComputeStacks.","title":"Step 4: Rename Region in ComputeStacks"},{"location":"admin_guide/cluster_management/cs_database/","text":"ComputeStacks Controller Database \u00b6 Take Backups \u00b6 We recommend you take a full snapshot of the virtual machine running ComputeStacks at regular intervals. By default, database backups are only created just before a new version is deployed. Database backups can be taken manually at anytime by running cstacks database-backup . This will created a compressed backup under /opt/computestacks/backups . Restoring a backup \u00b6 To restore a backup, cd to the backup directory and run gzip -d <filename> && psql cloudportal < <filename-without-gz> . For example, if the database backup is: cloudportal-20200617-0940_53.sql.gz , then you would run: I don\u2019t recommend copy/pasting the entire block below and running it. Instead, copy each line one-by-one and run it to make sure it\u2019s successful. docker stop portal dropdb cloudportal && createdb cloudportal gzip -d cloudportal-20200617-0940_53.sql.gz && psql cloudportal < cloudportal-20200617-0940_53.sql cstacks upgrade && cstacks run This will: Stop the controller Delete the existing database and re-create it (you may also do this from within psql ) Decompress the database backup and restore it to the newly created cloudportal database Run the upgrade command for ComputeStacks to ensure the schema is up to date, and finally; Start the portal back up.","title":"Controller Database"},{"location":"admin_guide/cluster_management/cs_database/#computestacks-controller-database","text":"","title":"ComputeStacks Controller Database"},{"location":"admin_guide/cluster_management/cs_database/#take-backups","text":"We recommend you take a full snapshot of the virtual machine running ComputeStacks at regular intervals. By default, database backups are only created just before a new version is deployed. Database backups can be taken manually at anytime by running cstacks database-backup . This will created a compressed backup under /opt/computestacks/backups .","title":"Take Backups"},{"location":"admin_guide/cluster_management/cs_database/#restoring-a-backup","text":"To restore a backup, cd to the backup directory and run gzip -d <filename> && psql cloudportal < <filename-without-gz> . For example, if the database backup is: cloudportal-20200617-0940_53.sql.gz , then you would run: I don\u2019t recommend copy/pasting the entire block below and running it. Instead, copy each line one-by-one and run it to make sure it\u2019s successful. docker stop portal dropdb cloudportal && createdb cloudportal gzip -d cloudportal-20200617-0940_53.sql.gz && psql cloudportal < cloudportal-20200617-0940_53.sql cstacks upgrade && cstacks run This will: Stop the controller Delete the existing database and re-create it (you may also do this from within psql ) Decompress the database backup and restore it to the newly created cloudportal database Run the upgrade command for ComputeStacks to ensure the schema is up to date, and finally; Start the portal back up.","title":"Restoring a backup"},{"location":"admin_guide/cluster_management/load_balancer/","text":"ComputeStacks Load Balancer \u00b6 The load balancer can be managed in the Admin via: Settings -> Load Balancers . We run HAProxy on each and every container node. For clusters, they will keep a duplicate copy of the current configuration, as well as, any certificates installed. This way, in the event of an IP failover even, the other load balancer is already running and ready to start serving requests. IP Settings \u00b6 Public IP This is the _Floating IP Address_ for your cluster. If you're running a single container node, then this will be the primary IP of that node. Server IPs This is a comma separated list of IP Addresses accessible from the controller. This is how the controller will connect to the Load Balancer and install any configuration Internal IPs These are the _internal_ ip addresses (also a comma separated list) of the load balancer. This will be the IP that the load balancer will connect to the container from. If you have a separate container network attached to the node, you will enter the IP address of the node. SSL Settings \u00b6 You must install a Wildcard SSL certificate for the LoadBalancer. The LoadBalancer will not start without one. During the installation process, a self-signed certificate was automatically generated and installed to the load balancer. To install a valid certificate, you have two options: Purchase a wildcard certificate and install it yourself (You may optionally purchase one from us for $50/year) Use our ACME (LetsEncrypt) service to generate a wildcard certificate for free. In order to use our ACME wildcard generator, the domain name must exist in the Settings -> DNS menu, and the nameservers must be correctly configured. Example \u00b6 If your shared container domain was a.cmptstks.net , you would create a new zone in Settings -> DNS for cmptstks.net . If your domain was a.region.cmptstks.net , you would still create the domain cmptstks.net . Once that\u2019s added, you will now need to update the nameserver settings for your domain to point to ours. For this, you have two options: Point your root domain (by editing the nameserver settings at domain registrar) to our nameservers, or; Keep your existing nameserver and use delegation. This is where you create new NS records for a subdomain, and point to our nameservers. Here is an example guide for doing that with Cloudflare. If your loadbalancer App URL was a.fra.example.net , you would create the following nameserver entries to point to our hosted dns service: fra.example.net 86400 IN NS ns1.auto-dns.com. fra.example.net 86400 IN NS ns3.auto-dns.com. fra.example.net 86400 IN NS ns3.autodns.nl. fra.example.net 86400 IN NS ns4.autodns.nl.","title":"Load Balancer"},{"location":"admin_guide/cluster_management/load_balancer/#computestacks-load-balancer","text":"The load balancer can be managed in the Admin via: Settings -> Load Balancers . We run HAProxy on each and every container node. For clusters, they will keep a duplicate copy of the current configuration, as well as, any certificates installed. This way, in the event of an IP failover even, the other load balancer is already running and ready to start serving requests.","title":"ComputeStacks Load Balancer"},{"location":"admin_guide/cluster_management/load_balancer/#ip-settings","text":"Public IP This is the _Floating IP Address_ for your cluster. If you're running a single container node, then this will be the primary IP of that node. Server IPs This is a comma separated list of IP Addresses accessible from the controller. This is how the controller will connect to the Load Balancer and install any configuration Internal IPs These are the _internal_ ip addresses (also a comma separated list) of the load balancer. This will be the IP that the load balancer will connect to the container from. If you have a separate container network attached to the node, you will enter the IP address of the node.","title":"IP Settings"},{"location":"admin_guide/cluster_management/load_balancer/#ssl-settings","text":"You must install a Wildcard SSL certificate for the LoadBalancer. The LoadBalancer will not start without one. During the installation process, a self-signed certificate was automatically generated and installed to the load balancer. To install a valid certificate, you have two options: Purchase a wildcard certificate and install it yourself (You may optionally purchase one from us for $50/year) Use our ACME (LetsEncrypt) service to generate a wildcard certificate for free. In order to use our ACME wildcard generator, the domain name must exist in the Settings -> DNS menu, and the nameservers must be correctly configured.","title":"SSL Settings"},{"location":"admin_guide/cluster_management/load_balancer/#example","text":"If your shared container domain was a.cmptstks.net , you would create a new zone in Settings -> DNS for cmptstks.net . If your domain was a.region.cmptstks.net , you would still create the domain cmptstks.net . Once that\u2019s added, you will now need to update the nameserver settings for your domain to point to ours. For this, you have two options: Point your root domain (by editing the nameserver settings at domain registrar) to our nameservers, or; Keep your existing nameserver and use delegation. This is where you create new NS records for a subdomain, and point to our nameservers. Here is an example guide for doing that with Cloudflare. If your loadbalancer App URL was a.fra.example.net , you would create the following nameserver entries to point to our hosted dns service: fra.example.net 86400 IN NS ns1.auto-dns.com. fra.example.net 86400 IN NS ns3.auto-dns.com. fra.example.net 86400 IN NS ns3.autodns.nl. fra.example.net 86400 IN NS ns4.autodns.nl.","title":"Example"},{"location":"getting_started/","text":"Getting Started \u00b6 Getting Help \u00b6 Join us either on Slack , or Matrix . See our Community Page for more info. See all our contact information.","title":"Overview"},{"location":"getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"getting_started/#getting-help","text":"Join us either on Slack , or Matrix . See our Community Page for more info. See all our contact information.","title":"Getting Help"},{"location":"getting_started/architecture_overview/","text":"Architecture \u00b6 ComputeStacks is a collection of open-source & commercial software, running in a clustered environment. This guide will walk through some of the key components to help you make an informed decision when planning your environment. All servers will use CentOS 7, and makes use of SELinux. Key Concepts \u00b6 Definitions \u00b6 Controller The Controller is the primary ComputeStacks software. This manages the orchestration of containers onto the Container Nodes . Region A Region is typically a geographic location that is used to group Availability Zones , and their subsequent Container Nodes . Availability Zone An Availability Zone (AZ) is a group of Container Nodes within a Region . A single public IP will be shared by all containers running with this AZ. Container Node Container Nodes are the physical compute resources that will run the containers. They are grouped by Availability Zone , within a single Region . While the CPU on a node is shared with all containers on the node, you must have enough cores to match the maximum package size you wish to offer. For example, if you wish to sell a 4 core CPU package, then you will need at least 4 CPU Cores available on the node. Networking \u00b6 Cluster Network For single node configurations, you only need a single public IP per server. However, in general we recommend a private network if possible. For clustered environments, we recommend you create a dedicated private network for inter-node communication. This should not perform any kind of source/destination filtering, otherwise we will need to use an overlay network, which will reduce overall network performance. Container-To-Container Each container is given a private IP Address, and by default can only communicate with other containers in the same project. If you choose to allow external connectivity, then our load balancer will forward 80/443 to your container. External Connectivity ComputeStacks supports http and tcp traffic. All ssl and tls traffic is, by default, terminated by our shared load balancer. If a user wishes to manage tls connections on their own, they have the option of disabling that feature. Our load balancer ( HAProxy ) runs on each node in the availability zone, and shares a single floating IP. In the event of a node failure, we use pacemaker & corosync to move that floating IP to another node in the cluster. We maintain the same configuration on each node so that all load balancers are able to serve traffic immediately. Container Storage \u00b6 Our default configuration is to run our containers using locally-mounted storage volumes. This provides both performance, stability, and cost benefits over shared/clustered storage, and for our typical customer, provides the best fit for their business model. However, if you have different uptime / performance targets that you need to hit, we can work with a number of different shared storage platforms. Backups \u00b6 ComputeStacks uses an in-house developed backup solution, built upon the excellent borg backup engine. We include specific backup drivers for MySQL/MariaDB and PostgreSQL that ensure consistent and unobtrusive backups. You will need to provide a separate backup server that will hold your customer\u2019s backups. We generally recommend using a separate backup server per availability zone. Container Registry \u00b6 ComputeStacks offers an integrated container registry to aid in your customers image development. For small deployments, we will run this on the same server as our controller. However, we recommend that this run on it\u2019s own server. DNS \u00b6 ComputeStacks offers an optional DNS interface. You may choose to use our hosted DNS service for free, or deploy your own PowerDNS service. Example Configurations \u00b6 The following configuration examples are for planning purposes only. Please work with our team to design an appropriate architecture to meet your goals. The recommendations below are based on a typical hosting provider\u2019s workload. This means that a majority of the containers deployed will be php-based (e.g. wordpress) , and use Redis & MySQL. Please see our installation guide for our minimum requirements. Single-Node Environment \u00b6 For small hosting providers who are just getting started. This setup will typically support 20 Wordpress sites with average traffic. Single Region, No Cluster Server Role CPU Memory Storage Network Notes Controller 4 Cores 8 GB 50 GB Single public IP address Container Node 4 Cores 12 GB 100 GB Single public IP Address Backup Server 1 Core 1 GB 100 GB 1 public, 1 private Cluster Examples \u00b6 All of our cluster examples will require: A private network shared between all nodes If possible, disable source/destination filtering. Otherwise you will need to use IP-in-IP. 1 public floating IP Per Availability Zone . Small Cluster Container Registry, Prometheus & loki run on the controller Single Region Server Role CPU Memory Storage Network Notes Controller 4 Cores 8 GB 50 GB Single public IP address Container Node 1 4 Cores 12 GB 100 GB 1 public, 1 private Container Node 2 4 Cores 12 GB 100 GB 1 public, 1 private Container Node 3 4 Cores 12 GB 100 GB 1 public, 1 private Backup Server 1 Core 1 GB 150 GB 1 public, 1 private Medium Cluster Medium Cluster Server Role CPU Memory Storage Network Notes Controller 4 Cores 10 GB 50 GB Single public IP address Container Node 1 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 2 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 3 8 Cores 24 GB 150 GB 1 public, 1 private Backup Server 1 Core 1 GB 150 GB 1 public, 1 private Container Registry 2 Cores 2 GB 150 GB 1 public, 1 private Prometheus & Loki 2 Cores 2 GB 25 GB 1 public, 1 private Multi-Region Cluster Shared Resources Server Role CPU Memory Storage Network Notes Controller 6 Cores 12 GB 50 GB Single public IP address Container Registry 2 Cores 2 GB 350 GB Single public IP Region 1 Server Role CPU Memory Storage Network Notes Container Node 1 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 2 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 3 8 Cores 24 GB 150 GB 1 public, 1 private Backup Server 1 Core 1 GB 150 GB 1 public, 1 private Prometheus & Loki 2 Cores 2 GB 25 GB 1 public, 1 private Region 2 Server Role CPU Memory Storage Network Notes Container Node 1 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 2 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 3 8 Cores 24 GB 150 GB 1 public, 1 private Backup Server 1 Core 1 GB 150 GB 1 public, 1 private Prometheus & Loki 2 Cores 2 GB 25 GB 1 public, 1 private Single Region, Multi-AZ \u00b6 You can choose to run the backup server shared between AZ\u2019s, or create a dedicated one per-AZ. Just note that the private network must be accessible across all AZ\u2019s. Shared Resources Server Role CPU Memory Storage Network Notes Controller 6 Cores 12 GB 50 GB Single public IP address Container Registry 2 Cores 2 GB 350 GB Single public IP Backup Server 1 Core 1 GB 350 GB 1 public, 1 private (private is accessible to both AZ\u2019s) Prometheus & Loki 2 Cores 2 GB 25 GB 1 public, 1 private Region 1, AZ 1 Server Role CPU Memory Storage Network Notes Container Node 1 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 2 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 3 8 Cores 24 GB 150 GB 1 public, 1 private Region 1, AZ 2 Server Role CPU Memory Storage Network Notes Container Node 1 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 2 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 3 8 Cores 24 GB 150 GB 1 public, 1 private","title":"Architecture"},{"location":"getting_started/architecture_overview/#architecture","text":"ComputeStacks is a collection of open-source & commercial software, running in a clustered environment. This guide will walk through some of the key components to help you make an informed decision when planning your environment. All servers will use CentOS 7, and makes use of SELinux.","title":"Architecture"},{"location":"getting_started/architecture_overview/#key-concepts","text":"","title":"Key Concepts"},{"location":"getting_started/architecture_overview/#definitions","text":"","title":"Definitions"},{"location":"getting_started/architecture_overview/#networking","text":"","title":"Networking"},{"location":"getting_started/architecture_overview/#container-storage","text":"Our default configuration is to run our containers using locally-mounted storage volumes. This provides both performance, stability, and cost benefits over shared/clustered storage, and for our typical customer, provides the best fit for their business model. However, if you have different uptime / performance targets that you need to hit, we can work with a number of different shared storage platforms.","title":"Container Storage"},{"location":"getting_started/architecture_overview/#backups","text":"ComputeStacks uses an in-house developed backup solution, built upon the excellent borg backup engine. We include specific backup drivers for MySQL/MariaDB and PostgreSQL that ensure consistent and unobtrusive backups. You will need to provide a separate backup server that will hold your customer\u2019s backups. We generally recommend using a separate backup server per availability zone.","title":"Backups"},{"location":"getting_started/architecture_overview/#container-registry","text":"ComputeStacks offers an integrated container registry to aid in your customers image development. For small deployments, we will run this on the same server as our controller. However, we recommend that this run on it\u2019s own server.","title":"Container Registry"},{"location":"getting_started/architecture_overview/#dns","text":"ComputeStacks offers an optional DNS interface. You may choose to use our hosted DNS service for free, or deploy your own PowerDNS service.","title":"DNS"},{"location":"getting_started/architecture_overview/#example-configurations","text":"The following configuration examples are for planning purposes only. Please work with our team to design an appropriate architecture to meet your goals. The recommendations below are based on a typical hosting provider\u2019s workload. This means that a majority of the containers deployed will be php-based (e.g. wordpress) , and use Redis & MySQL. Please see our installation guide for our minimum requirements.","title":"Example Configurations"},{"location":"getting_started/architecture_overview/#single-node-environment","text":"For small hosting providers who are just getting started. This setup will typically support 20 Wordpress sites with average traffic. Single Region, No Cluster Server Role CPU Memory Storage Network Notes Controller 4 Cores 8 GB 50 GB Single public IP address Container Node 4 Cores 12 GB 100 GB Single public IP Address Backup Server 1 Core 1 GB 100 GB 1 public, 1 private","title":"Single-Node Environment"},{"location":"getting_started/architecture_overview/#cluster-examples","text":"All of our cluster examples will require: A private network shared between all nodes If possible, disable source/destination filtering. Otherwise you will need to use IP-in-IP. 1 public floating IP Per Availability Zone .","title":"Cluster Examples"},{"location":"getting_started/architecture_overview/#single-region-multi-az","text":"You can choose to run the backup server shared between AZ\u2019s, or create a dedicated one per-AZ. Just note that the private network must be accessible across all AZ\u2019s. Shared Resources Server Role CPU Memory Storage Network Notes Controller 6 Cores 12 GB 50 GB Single public IP address Container Registry 2 Cores 2 GB 350 GB Single public IP Backup Server 1 Core 1 GB 350 GB 1 public, 1 private (private is accessible to both AZ\u2019s) Prometheus & Loki 2 Cores 2 GB 25 GB 1 public, 1 private Region 1, AZ 1 Server Role CPU Memory Storage Network Notes Container Node 1 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 2 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 3 8 Cores 24 GB 150 GB 1 public, 1 private Region 1, AZ 2 Server Role CPU Memory Storage Network Notes Container Node 1 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 2 8 Cores 24 GB 150 GB 1 public, 1 private Container Node 3 8 Cores 24 GB 150 GB 1 public, 1 private","title":"Single Region, Multi-AZ"},{"location":"getting_started/community/","text":"Join our Community Chat \u00b6 We have two great ways to connect with other members of our community, including our team. Come to discuss with other ComputeStacks users and team members! Slack \u00b6 Please visit our slack signup page to request an invite to our user group. Matrix \u00b6 Matrix is a open, decentralized protocol for communicating. ComputeStacks maintains a public server that everyone is welcome to join. ComputeStacks User Community matrix.to/#/+users:computestacks.com Private E2E Rooms \u00b6 Once you have joined our community, please reach out to one of our team members and we will create a private, end-to-end encrypted, room for us to communicate. If you would prefer not to join our public community, simply reach out to one of our team members and we will invite you to a private room. New to Matrix? \u00b6 If you\u2019re brand new to matrix, the easiest way to get started is by signing up and creating your account through the element webapp . They also offer downloaded apps for your mobile devices, and your desktop computers. Once you\u2019ve logged in, be sure to setup your encryption key for E2E chat Our general chat does not have E2E enabled in order to allow new members to view the previous discussion. However, for 1-to-1 chats, or when using our private rooms, we request that you enable E2E. Accessing Our Rooms Instead of following the steps below, you may also navigate directly to our ComputeStacks user community page . Click on the explore button Add the server by clicking the dropdown next to \u2018Matrix rooms\u2019. Join ComputeStacks Rooms","title":"Community Chat"},{"location":"getting_started/community/#join-our-community-chat","text":"We have two great ways to connect with other members of our community, including our team. Come to discuss with other ComputeStacks users and team members!","title":"Join our Community Chat"},{"location":"getting_started/community/#slack","text":"Please visit our slack signup page to request an invite to our user group.","title":"Slack"},{"location":"getting_started/community/#matrix","text":"Matrix is a open, decentralized protocol for communicating. ComputeStacks maintains a public server that everyone is welcome to join. ComputeStacks User Community matrix.to/#/+users:computestacks.com","title":"Matrix"},{"location":"getting_started/community/#private-e2e-rooms","text":"Once you have joined our community, please reach out to one of our team members and we will create a private, end-to-end encrypted, room for us to communicate. If you would prefer not to join our public community, simply reach out to one of our team members and we will invite you to a private room.","title":"Private E2E Rooms"},{"location":"getting_started/community/#new-to-matrix","text":"If you\u2019re brand new to matrix, the easiest way to get started is by signing up and creating your account through the element webapp . They also offer downloaded apps for your mobile devices, and your desktop computers. Once you\u2019ve logged in, be sure to setup your encryption key for E2E chat Our general chat does not have E2E enabled in order to allow new members to view the previous discussion. However, for 1-to-1 chats, or when using our private rooms, we request that you enable E2E. Accessing Our Rooms Instead of following the steps below, you may also navigate directly to our ComputeStacks user community page . Click on the explore button Add the server by clicking the dropdown next to \u2018Matrix rooms\u2019. Join ComputeStacks Rooms","title":"New to Matrix?"},{"location":"getting_started/notifications/","text":"Notifications \u00b6 ComputeStacks offers hooks into key events, which allow you to receive notifications on various channels. Available Notifications \u00b6 Users \u00b6 For end-users, you have access to the following notifications: ContainerBootFailed Attempt to automatically recover a container has failed ContainerCreated Container is created ContainerCpuUsage Container CPU usage has been above 85% for more than 1 minute ContainerDestroyed Container has been deleted ContainerMemoryUsage Container memory usage has been above 85% for more than 1 minute Administrators \u00b6 This is in addition to the notifications available to users. NewOrder A new order is received UserActivated A user is unsuspended UserCreated A user is created UserDeleted A user is deleted UserSuspended A user is suspended DiskWillFillIn4Hours A disk on a node will be full in 4 hours at the current rate ExporterDown A node exporter has failed HighCpuLoad A node has excessive cpu usage NodeUp A node has come online OutOfDiskSpace A node is out of disk space OutOfInodes A node is out of disk inodes OutOfMemory A node is out of memory UnusualDiskReadLatency Unusual disk read latency UnusualDiskWriteLatency Unusual disk write latency Notification Channels \u00b6 Email \u00b6 Sends an email to the specified address Google Chat \u00b6 To generate a webhook url, navigate to your google chat room and select the dropdown icon next to the room name; select Manage webhooks . Keybase \u00b6 To generate a webhook url, navigate to the chat room and click the (i) icon in the upper right-hand corner. Choose \u2018Bots\u2019 and add the Webhook Bot . Matrix \u00b6 New to Matrix? We recommend deploying your own Matrix installation using this ansible playbook . Our integration was designed to work with the appservice-webhooks bridge. If you\u2019re using the ansible playbook listed above to manage your Matrix installation, you may use these instructions to get this setup. Microsoft Teams \u00b6 This integration is in beta, please share your feedback! Send webhook to a Microsoft Teams channel. Learn More Slack \u00b6 Uses the standard incoming webhook integration. Webhook \u00b6 Sends a json POST request to an endpoint of your choice. Your endpoint must respond with a 20x http code, otherwise we will continue to send the notification. The message we send will be formatted with markdown formatting. Specifically, we use * to denote bold fields, and \\n to denote new lines. { \"text\" : \"*Sample Description*\\n<http://url.to.alert|View Alert>\\n*Container:* container-name-123\\n*Label:* Value\" }","title":"Notifications"},{"location":"getting_started/notifications/#notifications","text":"ComputeStacks offers hooks into key events, which allow you to receive notifications on various channels.","title":"Notifications"},{"location":"getting_started/notifications/#available-notifications","text":"","title":"Available Notifications"},{"location":"getting_started/notifications/#users","text":"For end-users, you have access to the following notifications: ContainerBootFailed Attempt to automatically recover a container has failed ContainerCreated Container is created ContainerCpuUsage Container CPU usage has been above 85% for more than 1 minute ContainerDestroyed Container has been deleted ContainerMemoryUsage Container memory usage has been above 85% for more than 1 minute","title":"Users"},{"location":"getting_started/notifications/#administrators","text":"This is in addition to the notifications available to users. NewOrder A new order is received UserActivated A user is unsuspended UserCreated A user is created UserDeleted A user is deleted UserSuspended A user is suspended DiskWillFillIn4Hours A disk on a node will be full in 4 hours at the current rate ExporterDown A node exporter has failed HighCpuLoad A node has excessive cpu usage NodeUp A node has come online OutOfDiskSpace A node is out of disk space OutOfInodes A node is out of disk inodes OutOfMemory A node is out of memory UnusualDiskReadLatency Unusual disk read latency UnusualDiskWriteLatency Unusual disk write latency","title":"Administrators"},{"location":"getting_started/notifications/#notification-channels","text":"","title":"Notification Channels"},{"location":"getting_started/notifications/#email","text":"Sends an email to the specified address","title":"Email"},{"location":"getting_started/notifications/#google-chat","text":"To generate a webhook url, navigate to your google chat room and select the dropdown icon next to the room name; select Manage webhooks .","title":"Google Chat"},{"location":"getting_started/notifications/#keybase","text":"To generate a webhook url, navigate to the chat room and click the (i) icon in the upper right-hand corner. Choose \u2018Bots\u2019 and add the Webhook Bot .","title":"Keybase"},{"location":"getting_started/notifications/#matrix","text":"New to Matrix? We recommend deploying your own Matrix installation using this ansible playbook . Our integration was designed to work with the appservice-webhooks bridge. If you\u2019re using the ansible playbook listed above to manage your Matrix installation, you may use these instructions to get this setup.","title":"Matrix"},{"location":"getting_started/notifications/#microsoft-teams","text":"This integration is in beta, please share your feedback! Send webhook to a Microsoft Teams channel. Learn More","title":"Microsoft Teams"},{"location":"getting_started/notifications/#slack","text":"Uses the standard incoming webhook integration.","title":"Slack"},{"location":"getting_started/notifications/#webhook","text":"Sends a json POST request to an endpoint of your choice. Your endpoint must respond with a 20x http code, otherwise we will continue to send the notification. The message we send will be formatted with markdown formatting. Specifically, we use * to denote bold fields, and \\n to denote new lines. { \"text\" : \"*Sample Description*\\n<http://url.to.alert|View Alert>\\n*Container:* container-name-123\\n*Label:* Value\" }","title":"Webhook"},{"location":"getting_started/installation/0_requirements/","text":"Planning Your Installation \u00b6 Before proceeding, we recommend you first review our Architecture Overview page. Our installation process requires ansible to be installed either locally on your computer, or remotely on a linux machine. Please ensure this has been setup prior to continuing with this installation process. License Key \u00b6 You may purchase, or request a free demo license key, here: accounts.computestacks.com Supported Linux Distribution \u00b6 Our recommended linux distribution is Debian 10 Buster . Previously we required CentOS 7 , and will continue to support that as well. Domain Names \u00b6 Having your domain names setup is a critical part of the installation process. The following roles will require domain names: Controller this is the main URL for the service. Examples include: portal, dashboard, cp,... Container Registry We recommend a shorter URL like cr, registry, ... Metrics For our log aggregation service and container metrics. This can be metrics.region.example.com , or something like that. We generally recommend that each region have their own metrics server and, ideally, accessible over private networks. We ask for a domain to generate an ACME certificate, and will then hard code the private IPs internally. App URL This is the default URL we use to generate domains for each service (container) . This can be something like a.region.example.com . Each Availability zone will need to have their own domain, which is why I recommend including the region and AZ in the URL. For example, if you have regions in Amsterdam and Frankfurt, you could use something like this: a.ams.example.net < -- Availability Zone 1 b.ams.example.net < -- Availability Zone 2 a.fra.example.net b.fra.example.net Example DNS Records a.dev.cmptstks.net. IN A %{floating_ip} metrics.dev.cmptstks.net. IN A %{PUBLIC IP OF METRICS SERVER} *.a.dev.cmptstks.net. IN CNAME a.dev.cmptstks.net. portal.dev.cmptstks.net. IN A %{controller ip address} cr.dev.cmptstks.net. IN CNAME portal.dev.cmptstks.net. Choosing a DNS Server \u00b6 We require a DNS integration for our platform; there are two supported options: Use our free hosted DNS service, or; Host your own PowerDNS servers. During installation, the default will be to use a shared demo account. Please contact us for your hosted dns credentials, or for help setting up your own PowerDNS cluster. Linux Users and Groups \u00b6 Our container nodes depend on having UID & GID 1001 available for our use. This is generally not a problem on most cloud and virtual machine images, however if you performed some pre-installation steps that included creating a user, this UID/GID may be already taken. Please change the UID and GID of the user who took that ID before proceeding. Here is a guide to help you accomplish this. You can verify that this is available by running the following commands on the container nodes: cat /etc/passwd | grep 1001 cat /etc/group | grep 1001 Network Setup \u00b6 At a minimum, we require a single public IP Address per server . However, the recommended network configuration for each server is: 1 Public, 1 Private. Each server should be able to communicate over the private network. Please ensure that the container node does not have any kind of source/destination filtering on it\u2019s private network interface. If this is not possible, you will need to set calico_network_ipip to true when building your ansible inventory For clusters (3+ container nodes), we will also require a Floating IP Address . We will use arp to announce that ip on one of the 3 nodes, and handle failover automatically through corosync and pacemaker. Disk Setup \u00b6 If you have the option to select the partition layout for the container nodes, please place most of your disk storage at /var/lib/docker . You can skip a dedicated /home partition, as this is not used in our environment. Example Disk Layout Filesystem Size Used Avail Use% Mounted on /dev/sda 100G 3.5G 96GB 1% / /dev/sdb 1.5T 14G 1.5T 1% /var/lib/docker /dev/sdc 487M 94M 368M 21% /boot Minimum Server Requirements \u00b6 All CPU Cores should be newer x86 2Ghz+ Intel or AMD processors. See more example configurations here . Testing Environment Name CPU Memory Disk Controller 4 Cores 8 GB 50 GB Container Node 2 Core 4 GB 50 GB Production Environment Name CPU Memory Disk Controller 4 Cores 8 GB 50 GB Backup Server 1 Core 1 GB Start with 50% of total disk capacity in the cluster Container Node 4 Core 12 GB 100 GB Metrics Server 4 Core 8 GB 25 GB Next Step: Preparing Installation Resources","title":"Plan"},{"location":"getting_started/installation/0_requirements/#planning-your-installation","text":"Before proceeding, we recommend you first review our Architecture Overview page. Our installation process requires ansible to be installed either locally on your computer, or remotely on a linux machine. Please ensure this has been setup prior to continuing with this installation process.","title":"Planning Your Installation"},{"location":"getting_started/installation/0_requirements/#license-key","text":"You may purchase, or request a free demo license key, here: accounts.computestacks.com","title":"License Key"},{"location":"getting_started/installation/0_requirements/#supported-linux-distribution","text":"Our recommended linux distribution is Debian 10 Buster . Previously we required CentOS 7 , and will continue to support that as well.","title":"Supported Linux Distribution"},{"location":"getting_started/installation/0_requirements/#domain-names","text":"Having your domain names setup is a critical part of the installation process. The following roles will require domain names: Controller this is the main URL for the service. Examples include: portal, dashboard, cp,... Container Registry We recommend a shorter URL like cr, registry, ... Metrics For our log aggregation service and container metrics. This can be metrics.region.example.com , or something like that. We generally recommend that each region have their own metrics server and, ideally, accessible over private networks. We ask for a domain to generate an ACME certificate, and will then hard code the private IPs internally. App URL This is the default URL we use to generate domains for each service (container) . This can be something like a.region.example.com . Each Availability zone will need to have their own domain, which is why I recommend including the region and AZ in the URL. For example, if you have regions in Amsterdam and Frankfurt, you could use something like this: a.ams.example.net < -- Availability Zone 1 b.ams.example.net < -- Availability Zone 2 a.fra.example.net b.fra.example.net Example DNS Records a.dev.cmptstks.net. IN A %{floating_ip} metrics.dev.cmptstks.net. IN A %{PUBLIC IP OF METRICS SERVER} *.a.dev.cmptstks.net. IN CNAME a.dev.cmptstks.net. portal.dev.cmptstks.net. IN A %{controller ip address} cr.dev.cmptstks.net. IN CNAME portal.dev.cmptstks.net.","title":"Domain Names"},{"location":"getting_started/installation/0_requirements/#choosing-a-dns-server","text":"We require a DNS integration for our platform; there are two supported options: Use our free hosted DNS service, or; Host your own PowerDNS servers. During installation, the default will be to use a shared demo account. Please contact us for your hosted dns credentials, or for help setting up your own PowerDNS cluster.","title":"Choosing a DNS Server"},{"location":"getting_started/installation/0_requirements/#linux-users-and-groups","text":"Our container nodes depend on having UID & GID 1001 available for our use. This is generally not a problem on most cloud and virtual machine images, however if you performed some pre-installation steps that included creating a user, this UID/GID may be already taken. Please change the UID and GID of the user who took that ID before proceeding. Here is a guide to help you accomplish this. You can verify that this is available by running the following commands on the container nodes: cat /etc/passwd | grep 1001 cat /etc/group | grep 1001","title":"Linux Users and Groups"},{"location":"getting_started/installation/0_requirements/#network-setup","text":"At a minimum, we require a single public IP Address per server . However, the recommended network configuration for each server is: 1 Public, 1 Private. Each server should be able to communicate over the private network. Please ensure that the container node does not have any kind of source/destination filtering on it\u2019s private network interface. If this is not possible, you will need to set calico_network_ipip to true when building your ansible inventory For clusters (3+ container nodes), we will also require a Floating IP Address . We will use arp to announce that ip on one of the 3 nodes, and handle failover automatically through corosync and pacemaker.","title":"Network Setup"},{"location":"getting_started/installation/0_requirements/#disk-setup","text":"If you have the option to select the partition layout for the container nodes, please place most of your disk storage at /var/lib/docker . You can skip a dedicated /home partition, as this is not used in our environment. Example Disk Layout Filesystem Size Used Avail Use% Mounted on /dev/sda 100G 3.5G 96GB 1% / /dev/sdb 1.5T 14G 1.5T 1% /var/lib/docker /dev/sdc 487M 94M 368M 21% /boot","title":"Disk Setup"},{"location":"getting_started/installation/0_requirements/#minimum-server-requirements","text":"All CPU Cores should be newer x86 2Ghz+ Intel or AMD processors. See more example configurations here . Testing Environment Name CPU Memory Disk Controller 4 Cores 8 GB 50 GB Container Node 2 Core 4 GB 50 GB Production Environment Name CPU Memory Disk Controller 4 Cores 8 GB 50 GB Backup Server 1 Core 1 GB Start with 50% of total disk capacity in the cluster Container Node 4 Core 12 GB 100 GB Metrics Server 4 Core 8 GB 25 GB Next Step: Preparing Installation Resources","title":"Minimum Server Requirements"},{"location":"getting_started/installation/1_prepare/","text":"Prepare Installation Resources \u00b6 If you will be deploying to a cloud provider, please first check to see if we have a terraform package for your provider. This will aid you in ensuring certain required steps are performed first. Setup Ansible \u00b6 Install Ansible \u00b6 Please see the ansible installation guide for more details on how to proceed with installing ansible. Install on MacOS Ensure you have homebrew installed, and run: brew install ansible Install on Linux To ensure you have an up-to-date copy of Ansible, we recommend using pip to install ansible. pip install --user ansible echo 'export PATH=\"$PATH:$HOME/.local/bin\"' >> ~/.bashrc source ~/.bashrc Note: For some distributions, it may be ~/.bash_profile instead of .bashrc . Download our Ansible Package \u00b6 git clone https://github.com/ComputeStacks/ansible-install computestacks-installer cd computestacks-installer mv inventory.yml.sample inventory.yml ansible-galaxy install -r requirements.yml If you used our terraform providers, you can skip the mv inventory.yml.sample inventory.yml command and copy the result/inventory.yml file to the root of this directory. The actual bootstrap process can take up to an hour , so we recommend you setup your ansible environment on a remote linux server, and run either tmux or screen . Inventory File \u00b6 Please review your inventory.yml file and ensure all the settings are correct. You may check the roles/<role>/defaults/main.yml file for each role to see additional configuration options. Prepare the servers \u00b6 Server Hostnames \u00b6 Ensure all hostnames are configured properly on each node. Our system expects the hostnames on nodes to be 1 lowercase word (dashes or underscores are ok), no special characters or spaces. They should not be FQDN or have the dot notation. Examples: node101, node102, node103 hostname node101 && echo \"node101\" > /etc/hostname && echo \"127.0.0.1 node101\" >> /etc/hosts The reason these are critical are two fold: a) When metrics are stored for containers or nodes, the hostname is added as a label. This is how ComputeStacks is able to filter metrics for the correct container/node. b) Backup jobs are assigned to the node by their hostname. If there is a mismatch in the controller, then jobs will not run.` Base Packages \u00b6 Please ensure the following packages have been installed prior to running the ansible installation. apt update && apt -y install openssl ca-certificates linux-headers-amd64 python3 python3-pip python3-openssl python3-apt python3-setuptools python3-wheel && pip3 install ansible yum -y update && yum -y install epel-release kernel-headers && yum -y install ansible Additionally, we require selinux to be enabled when using CentOS 7 How to enable SELINUX Check if it\u2019s enabled and active by running: sestatus If SELinux status: is not enabled, then please Edit /etc/selinux/config and set SELINUX=enforcing touch /.autorelabel reboot Network MTU Settings \u00b6 If you\u2019re using a setting other than the default 1500, please add the following to the main vars: section of your inventory.yml file: container_network_mtu: 1400 # Set the desired MTU for containers to use IPv6 for Container Nodes \u00b6 Due to an ongoing issue with the container network platform we use, IPv6 is currently not supported on our container nodes. We\u2019re able to bring ipv6 connectivity by either using a dedicated load balancer on a separate virtual machine, or by configuring the controller to proxy ipv6 traffic. For the time being, our installer will disable ipv6 directly on the node. However, we recommend also cleaning out the /etc/sysconfig/network-scripts/ifcfg-* files to remove any ipv6 specific settings, and setting IPV6INIT=no . Next Step: Perform Installation","title":"Prepare"},{"location":"getting_started/installation/1_prepare/#prepare-installation-resources","text":"If you will be deploying to a cloud provider, please first check to see if we have a terraform package for your provider. This will aid you in ensuring certain required steps are performed first.","title":"Prepare Installation Resources"},{"location":"getting_started/installation/1_prepare/#setup-ansible","text":"","title":"Setup Ansible"},{"location":"getting_started/installation/1_prepare/#install-ansible","text":"Please see the ansible installation guide for more details on how to proceed with installing ansible. Install on MacOS Ensure you have homebrew installed, and run: brew install ansible Install on Linux To ensure you have an up-to-date copy of Ansible, we recommend using pip to install ansible. pip install --user ansible echo 'export PATH=\"$PATH:$HOME/.local/bin\"' >> ~/.bashrc source ~/.bashrc Note: For some distributions, it may be ~/.bash_profile instead of .bashrc .","title":"Install Ansible"},{"location":"getting_started/installation/1_prepare/#download-our-ansible-package","text":"git clone https://github.com/ComputeStacks/ansible-install computestacks-installer cd computestacks-installer mv inventory.yml.sample inventory.yml ansible-galaxy install -r requirements.yml If you used our terraform providers, you can skip the mv inventory.yml.sample inventory.yml command and copy the result/inventory.yml file to the root of this directory. The actual bootstrap process can take up to an hour , so we recommend you setup your ansible environment on a remote linux server, and run either tmux or screen .","title":"Download our Ansible Package"},{"location":"getting_started/installation/1_prepare/#inventory-file","text":"Please review your inventory.yml file and ensure all the settings are correct. You may check the roles/<role>/defaults/main.yml file for each role to see additional configuration options.","title":"Inventory File"},{"location":"getting_started/installation/1_prepare/#prepare-the-servers","text":"","title":"Prepare the servers"},{"location":"getting_started/installation/1_prepare/#server-hostnames","text":"Ensure all hostnames are configured properly on each node. Our system expects the hostnames on nodes to be 1 lowercase word (dashes or underscores are ok), no special characters or spaces. They should not be FQDN or have the dot notation. Examples: node101, node102, node103 hostname node101 && echo \"node101\" > /etc/hostname && echo \"127.0.0.1 node101\" >> /etc/hosts The reason these are critical are two fold: a) When metrics are stored for containers or nodes, the hostname is added as a label. This is how ComputeStacks is able to filter metrics for the correct container/node. b) Backup jobs are assigned to the node by their hostname. If there is a mismatch in the controller, then jobs will not run.`","title":"Server Hostnames"},{"location":"getting_started/installation/1_prepare/#base-packages","text":"Please ensure the following packages have been installed prior to running the ansible installation. apt update && apt -y install openssl ca-certificates linux-headers-amd64 python3 python3-pip python3-openssl python3-apt python3-setuptools python3-wheel && pip3 install ansible yum -y update && yum -y install epel-release kernel-headers && yum -y install ansible Additionally, we require selinux to be enabled when using CentOS 7 How to enable SELINUX Check if it\u2019s enabled and active by running: sestatus If SELinux status: is not enabled, then please Edit /etc/selinux/config and set SELINUX=enforcing touch /.autorelabel reboot","title":"Base Packages"},{"location":"getting_started/installation/1_prepare/#network-mtu-settings","text":"If you\u2019re using a setting other than the default 1500, please add the following to the main vars: section of your inventory.yml file: container_network_mtu: 1400 # Set the desired MTU for containers to use","title":"Network MTU Settings"},{"location":"getting_started/installation/1_prepare/#ipv6-for-container-nodes","text":"Due to an ongoing issue with the container network platform we use, IPv6 is currently not supported on our container nodes. We\u2019re able to bring ipv6 connectivity by either using a dedicated load balancer on a separate virtual machine, or by configuring the controller to proxy ipv6 traffic. For the time being, our installer will disable ipv6 directly on the node. However, we recommend also cleaning out the /etc/sysconfig/network-scripts/ifcfg-* files to remove any ipv6 specific settings, and setting IPV6INIT=no . Next Step: Perform Installation","title":"IPv6 for Container Nodes"},{"location":"getting_started/installation/2_perform/","text":"Perform Installation \u00b6 Preflight Checklist \u00b6 Before you run the ansible package, lets quickly run through our checklist and make sure we have everything done. Servers Servers have been created with the minimum requirements Required base packages have been installed Hostnames have been configured You have verified connectivity between the servers Domains Domains have been identified, and; their DNS records have been set Inventory File You\u2019ve generated passwords: backups key, prometheus, and loki Domain names have been added License Key is added, and active Default Admin account is defined All servers and their respective public/private IP addresses have been added The Floating IP Address has been defined (if applicable) You\u2019ve added your ip addresses to the extra_allowed_ipv4_addresses section Run Installer \u00b6 Now that your inventory.yml file has been configured, and all servers are prepared, you may now run the ansible bootstrap script. ansible-playbook -u root -i inventory.yml main.yml --tags \"bootstrap\" Depending on how many servers you\u2019re provisioning, this process may take up to an hour . Validate Installation \u00b6 The very last step of the ansible package is to reboot all the servers. Once they come back online, you can run the following command, which performs a series of sanity checks to make sure everything is running. ansible-playbook -u root -i inventory.yml main.yml --tags \"validate\" Next Step: Finalize Installation Troubleshooting \u00b6 Occasionally a task may fail during the bootstrap process due to various reasons, such as: Temporary network or dns issue hardware issue with the server This can cause complications for your bootstrap process, depending on where it failed. Many of our roles have checks in the roles/<role-name>/tasks/main.yml to see if a process has run already to avoid re-running it. This is done by checking for either configuration files present on the system, or if the service is running. If the process failed after a particular configuration file was created, but before all the steps have been completed, the ansible task may skip over the rest thinking it\u2019s already done. In order to get around this, you may need to comment out those checks in the main.yml file for that task, and re-run the bootstrap command. Additionally, you may want to comment out tasks that have already run in the main main.yml file at the root of the ansible repo to speed up the process.","title":"Run"},{"location":"getting_started/installation/2_perform/#perform-installation","text":"","title":"Perform Installation"},{"location":"getting_started/installation/2_perform/#preflight-checklist","text":"Before you run the ansible package, lets quickly run through our checklist and make sure we have everything done. Servers Servers have been created with the minimum requirements Required base packages have been installed Hostnames have been configured You have verified connectivity between the servers Domains Domains have been identified, and; their DNS records have been set Inventory File You\u2019ve generated passwords: backups key, prometheus, and loki Domain names have been added License Key is added, and active Default Admin account is defined All servers and their respective public/private IP addresses have been added The Floating IP Address has been defined (if applicable) You\u2019ve added your ip addresses to the extra_allowed_ipv4_addresses section","title":"Preflight Checklist"},{"location":"getting_started/installation/2_perform/#run-installer","text":"Now that your inventory.yml file has been configured, and all servers are prepared, you may now run the ansible bootstrap script. ansible-playbook -u root -i inventory.yml main.yml --tags \"bootstrap\" Depending on how many servers you\u2019re provisioning, this process may take up to an hour .","title":"Run Installer"},{"location":"getting_started/installation/2_perform/#validate-installation","text":"The very last step of the ansible package is to reboot all the servers. Once they come back online, you can run the following command, which performs a series of sanity checks to make sure everything is running. ansible-playbook -u root -i inventory.yml main.yml --tags \"validate\" Next Step: Finalize Installation","title":"Validate Installation"},{"location":"getting_started/installation/2_perform/#troubleshooting","text":"Occasionally a task may fail during the bootstrap process due to various reasons, such as: Temporary network or dns issue hardware issue with the server This can cause complications for your bootstrap process, depending on where it failed. Many of our roles have checks in the roles/<role-name>/tasks/main.yml to see if a process has run already to avoid re-running it. This is done by checking for either configuration files present on the system, or if the service is running. If the process failed after a particular configuration file was created, but before all the steps have been completed, the ansible task may skip over the rest thinking it\u2019s already done. In order to get around this, you may need to comment out those checks in the main.yml file for that task, and re-run the bootstrap command. Additionally, you may want to comment out tasks that have already run in the main main.yml file at the root of the ansible repo to speed up the process.","title":"Troubleshooting"},{"location":"getting_started/installation/3_finalize/","text":"Finalize Installation \u00b6 Congratulations! \ud83c\udf89 You should now be able to access your controller, and login with the credentials defined in the inventory.yml file. If you\u2019re unable to access the portal, please run the validation script from the previous section. ComputeStacks Settings \u00b6 Once you\u2019ve logged in and navigated to the Admin, lets get a few basic setup. Navigate to Settings -> Advanced Settings . You will want to review each setting, and update it as necessary. Custom Branding \u00b6 Billing \u00b6 We currently have 3 options for integrating billing with ComputeStacks: Use our WHMCS plugin Configure Billing Webhooks Use our API to pull data and bill independently of ComputeStacks LoadBalancer Wildcard SSL Certificate \u00b6 During the installation process, a self-signed wildcard certificate was installed to the new Load Balancer. To install a valid certificate, please refer to our LoadBalancer SSL Guide . SMTP Settings \u00b6 If you do not have your own MTA, we recommend the following services: Postmark Send In Blue Yubikey \u00b6 You can generate these settings by navigating to: upgrade.yubico.com/getapikey You will need a yubikey before setting this up. If you do not have one, please contact support and we will generate the credentials for you.","title":"Finalize"},{"location":"getting_started/installation/3_finalize/#finalize-installation","text":"Congratulations! \ud83c\udf89 You should now be able to access your controller, and login with the credentials defined in the inventory.yml file. If you\u2019re unable to access the portal, please run the validation script from the previous section.","title":"Finalize Installation"},{"location":"getting_started/installation/3_finalize/#computestacks-settings","text":"Once you\u2019ve logged in and navigated to the Admin, lets get a few basic setup. Navigate to Settings -> Advanced Settings . You will want to review each setting, and update it as necessary.","title":"ComputeStacks Settings"},{"location":"getting_started/installation/3_finalize/#custom-branding","text":"","title":"Custom Branding"},{"location":"getting_started/installation/3_finalize/#billing","text":"We currently have 3 options for integrating billing with ComputeStacks: Use our WHMCS plugin Configure Billing Webhooks Use our API to pull data and bill independently of ComputeStacks","title":"Billing"},{"location":"getting_started/installation/3_finalize/#loadbalancer-wildcard-ssl-certificate","text":"During the installation process, a self-signed wildcard certificate was installed to the new Load Balancer. To install a valid certificate, please refer to our LoadBalancer SSL Guide .","title":"LoadBalancer Wildcard SSL Certificate"},{"location":"getting_started/installation/3_finalize/#smtp-settings","text":"If you do not have your own MTA, we recommend the following services: Postmark Send In Blue","title":"SMTP Settings"},{"location":"getting_started/installation/3_finalize/#yubikey","text":"You can generate these settings by navigating to: upgrade.yubico.com/getapikey You will need a yubikey before setting this up. If you do not have one, please contact support and we will generate the credentials for you.","title":"Yubikey"},{"location":"getting_started/integrations/cpanel_plugin/","text":"ComputeStacks cPanel Plugin \u00b6 Our ComputeStacks plugin offers a way to offer additional applications in your cPanel environment. We use a client side interface that we run in our plugin, and includes direct integration with cPanel\u2019s domain functionality to easily link domains hosted in cPanel, with ComputeStacks. Features \u00b6 Support for WHMCS . Automatically create users in ComputeStacks, so your users won\u2019t have to login someone else. (optionally) we support asking the user to authenticate with ComputeStacks via an oauth popup screen. Simplified version of our full controller interface. Configure ComputeStacks \u00b6 The first required step is to generate your API Credentials for cPanel. Login or impersonate the user who will own the oauth credentials \u2013 this should be an admin user. Our default installation will create a cPanel service account that you may use. Navigate to Profile -> Developer -> Applications You have two ways of connecting to ComputeStacks: Have the cpanel user authenticate with ComputeStacks: This requires that the user already have a ComputeStacks account. Automatically generate a ComputeStacks account and log the user in: This is our recommended approach and offers the least amount of onboarding friction. Authenticate with ComputeStacks In this configuration, our plugin will ask the user to authenticate directly with ComputeStacks. This is preferred when you have a mixed-user setup: cPanel users will also be using our full control panel. In ComputeStacks, create an application with the following settings: Redirect URI: This will be in the form of: https://<my-cpanel-server>:2083/frontend/paper_lantern/computestacks/torii/redirect.html We will inject the session ID into the URL, so we don\u2019t need to create any kind of variable or placeholder for that here. Confidential: false (unchecked) Scopes: all scopes, except the following: admin:read , admin:write , register . Owner: none Automatically creating the user and store the credentials in cPanel This is the has the least amount of friction for the user. In this mode, the cPanel plugin will automatically create a user in ComputeStacks, and store the credentials locally in cPanel\u2019s secret store for future use. To set up your plugin in this configuration, create an application in ComputeStacks with the following settings: Redirect URI: urn:ietf:wg:oauth:2.0:oob Confidential: true (checked) Scopes: public , register . Owner: none This will be used to perform the initial registration and account setup. The cPanel plugin will authentication credentials locally and perform automatic authentication in the future. Now create the same app under as the previous section, but this time set the Redirect URI to: urn:ietf:wg:oauth:2.0:oob . This will be the app ID used to identify what our user can do with their API credentials. Install Plugin on cPanel Server \u00b6 Build Plugin Package \u00b6 How to pin plugin to a specific version These instructions will follow the master branch of the plugin. If you would like pin to a specific version, then after cloning the repo (or running git pull ), you may checkout a specific release with: git checkout v1.0 , where v1.0 is the name of the release (git tag) . You can see a list of available releases here . SSH onto your server and navigate to /usr/local/src Clone the repository to computestacks-plugin . Copy the sample configuration file to computestacks.ini and set your API credentials and endpoint. What is the autoLogin setting for? tl;dr For most installations, leave autoLogin = true . This setting determines if the plugin will automatically create a user in ComputeStacks for this cpanel account. If false, they will instead be prompted to login to ComputeStacks and link their account to this cpanel account. Example cd /usr/local/src \\ && git clone https://github.com/ComputeStacks/cpanel-plugin.git computestacks-plugin \\ && cd computestacks-plugin \\ && cp computestacks.ini.sample computestacks.ini Deploy Plugin Package \u00b6 Install UI Files Copy the contents of plugin_files to /usr/local/cpanel/base/frontend/paper_lantern/computestack . Example cd /usr/local/src/computestacks-plugin/ \\ && mkdir -p /usr/local/cpanel/base/frontend/paper_lantern/computestacks \\ && rsync -aP plugin_files/ /usr/local/cpanel/base/frontend/paper_lantern/computestacks/ Install Plugin Before running the commands, review the computestacks/install.json file. Examples of changes you can make: Change the name of the group from ComputeStacks to your brand for this offering (e.g. Cloud apps, Containers, etc). Add or remove app icons to the group Set where this group will appear in the in the cPanel interface. By default we install it at the top. Install the plugin with: /usr/local/cpanel/scripts/install_plugin computestacks The computestacks portion of the install command is the directory name inside our plugin. If you changed the directory name, please adjust accordingly. Furthermore, you may see a computestacks.tar.gz file instead of a directory. You may either uncompress that and make your changes, then run the command above, or you can install the defaults by running: /usr/local/cpanel/scripts/install_plugin computestacks.tar.gz Activate Plugin \u00b6 With the plugin installed, the last step is to enable it within the Feature Manager of WHM. How do i find the plugin in the Feature Manager? Look for the individual icon names within the Feature Manager, not Compute Stacks . Each item in the install.json will appear separately here. You can see an example here . Image Specifics \u00b6 Redis \u00b6 In order to connect to redis over TLS on cPanel, you will need to be running at least php7.2. Additionally, you will need to ensure that phpredis v5.0 or greater is installed. How do I install phpredis on cpanel? You can install phpredis on cpanel by logging into WHM and navigating to: Software -> Module Installers -> PHP PECL . Search for redis and install for all version of php offered. Click to learn more about our redis implementation on ComputeStacks. FAQ & Troubleshooting \u00b6 How do I uninstall the plugin? Run /usr/local/cpanel/scripts/uninstall_plugin on either the directory that contains the install.json file, or on the compressed archive. Delete the directory: /usr/local/cpanel/base/frontend/paper_lantern/computestacks How do I update the plugin? The main interface is all client side and loaded from our CDN. However, our cpanel-specific code does run locally on the server and will need to be updated from time-to-time. Tip If you\u2019re only making changes to the install.json file, then you don\u2019t need to perform all these steps. Just re-run the /usr/local/cpanel/scripts/install_plugin command. To update the plugin, simply perform a git pull from the plugin directory ( /usr/local/src/computestacks-plugin/ ) and rsync the plugin files the same you performed the installation. If you made any changes to the local directory, you will get a git merge warning during the git pull operation. Be sure to clear those up before running rsync. If you are pinned to a specific release (tag) , you will need to refresh the tag list and checkout the new tag.paper_lantern/computestacks/` Example cd /usr/local/src/computestacks-plugin/ \\ && git pull origin master \\ && rsync -aP plugin_files/ /usr/local/cpanel/base/frontend/paper_lantern/computestacks/","title":"cPanel"},{"location":"getting_started/integrations/cpanel_plugin/#computestacks-cpanel-plugin","text":"Our ComputeStacks plugin offers a way to offer additional applications in your cPanel environment. We use a client side interface that we run in our plugin, and includes direct integration with cPanel\u2019s domain functionality to easily link domains hosted in cPanel, with ComputeStacks.","title":"ComputeStacks cPanel Plugin"},{"location":"getting_started/integrations/cpanel_plugin/#features","text":"Support for WHMCS . Automatically create users in ComputeStacks, so your users won\u2019t have to login someone else. (optionally) we support asking the user to authenticate with ComputeStacks via an oauth popup screen. Simplified version of our full controller interface.","title":"Features"},{"location":"getting_started/integrations/cpanel_plugin/#configure-computestacks","text":"The first required step is to generate your API Credentials for cPanel. Login or impersonate the user who will own the oauth credentials \u2013 this should be an admin user. Our default installation will create a cPanel service account that you may use. Navigate to Profile -> Developer -> Applications You have two ways of connecting to ComputeStacks: Have the cpanel user authenticate with ComputeStacks: This requires that the user already have a ComputeStacks account. Automatically generate a ComputeStacks account and log the user in: This is our recommended approach and offers the least amount of onboarding friction. Authenticate with ComputeStacks In this configuration, our plugin will ask the user to authenticate directly with ComputeStacks. This is preferred when you have a mixed-user setup: cPanel users will also be using our full control panel. In ComputeStacks, create an application with the following settings: Redirect URI: This will be in the form of: https://<my-cpanel-server>:2083/frontend/paper_lantern/computestacks/torii/redirect.html We will inject the session ID into the URL, so we don\u2019t need to create any kind of variable or placeholder for that here. Confidential: false (unchecked) Scopes: all scopes, except the following: admin:read , admin:write , register . Owner: none Automatically creating the user and store the credentials in cPanel This is the has the least amount of friction for the user. In this mode, the cPanel plugin will automatically create a user in ComputeStacks, and store the credentials locally in cPanel\u2019s secret store for future use. To set up your plugin in this configuration, create an application in ComputeStacks with the following settings: Redirect URI: urn:ietf:wg:oauth:2.0:oob Confidential: true (checked) Scopes: public , register . Owner: none This will be used to perform the initial registration and account setup. The cPanel plugin will authentication credentials locally and perform automatic authentication in the future. Now create the same app under as the previous section, but this time set the Redirect URI to: urn:ietf:wg:oauth:2.0:oob . This will be the app ID used to identify what our user can do with their API credentials.","title":"Configure ComputeStacks"},{"location":"getting_started/integrations/cpanel_plugin/#install-plugin-on-cpanel-server","text":"","title":"Install Plugin on cPanel Server"},{"location":"getting_started/integrations/cpanel_plugin/#build-plugin-package","text":"How to pin plugin to a specific version These instructions will follow the master branch of the plugin. If you would like pin to a specific version, then after cloning the repo (or running git pull ), you may checkout a specific release with: git checkout v1.0 , where v1.0 is the name of the release (git tag) . You can see a list of available releases here . SSH onto your server and navigate to /usr/local/src Clone the repository to computestacks-plugin . Copy the sample configuration file to computestacks.ini and set your API credentials and endpoint. What is the autoLogin setting for? tl;dr For most installations, leave autoLogin = true . This setting determines if the plugin will automatically create a user in ComputeStacks for this cpanel account. If false, they will instead be prompted to login to ComputeStacks and link their account to this cpanel account. Example cd /usr/local/src \\ && git clone https://github.com/ComputeStacks/cpanel-plugin.git computestacks-plugin \\ && cd computestacks-plugin \\ && cp computestacks.ini.sample computestacks.ini","title":"Build Plugin Package"},{"location":"getting_started/integrations/cpanel_plugin/#deploy-plugin-package","text":"","title":"Deploy Plugin Package"},{"location":"getting_started/integrations/cpanel_plugin/#activate-plugin","text":"With the plugin installed, the last step is to enable it within the Feature Manager of WHM. How do i find the plugin in the Feature Manager? Look for the individual icon names within the Feature Manager, not Compute Stacks . Each item in the install.json will appear separately here. You can see an example here .","title":"Activate Plugin"},{"location":"getting_started/integrations/cpanel_plugin/#image-specifics","text":"","title":"Image Specifics"},{"location":"getting_started/integrations/cpanel_plugin/#redis","text":"In order to connect to redis over TLS on cPanel, you will need to be running at least php7.2. Additionally, you will need to ensure that phpredis v5.0 or greater is installed. How do I install phpredis on cpanel? You can install phpredis on cpanel by logging into WHM and navigating to: Software -> Module Installers -> PHP PECL . Search for redis and install for all version of php offered. Click to learn more about our redis implementation on ComputeStacks.","title":"Redis"},{"location":"getting_started/integrations/cpanel_plugin/#faq-troubleshooting","text":"How do I uninstall the plugin? Run /usr/local/cpanel/scripts/uninstall_plugin on either the directory that contains the install.json file, or on the compressed archive. Delete the directory: /usr/local/cpanel/base/frontend/paper_lantern/computestacks How do I update the plugin? The main interface is all client side and loaded from our CDN. However, our cpanel-specific code does run locally on the server and will need to be updated from time-to-time. Tip If you\u2019re only making changes to the install.json file, then you don\u2019t need to perform all these steps. Just re-run the /usr/local/cpanel/scripts/install_plugin command. To update the plugin, simply perform a git pull from the plugin directory ( /usr/local/src/computestacks-plugin/ ) and rsync the plugin files the same you performed the installation. If you made any changes to the local directory, you will get a git merge warning during the git pull operation. Be sure to clear those up before running rsync. If you are pinned to a specific release (tag) , you will need to refresh the tag list and checkout the new tag.paper_lantern/computestacks/` Example cd /usr/local/src/computestacks-plugin/ \\ && git pull origin master \\ && rsync -aP plugin_files/ /usr/local/cpanel/base/frontend/paper_lantern/computestacks/","title":"FAQ &amp; Troubleshooting"},{"location":"getting_started/integrations/webhooks/","text":"Webhooks \u00b6 ComputeStacks offers administrators a few different web hook options. All of these can be set in the admin under Settings . To accept the web hook, your system must return a status code 202 ACCEPTED . Otherwise, our system will retry the web hook (up to 5 times). The retry schedule is as follows: First: One minute later Second: 15 minutes later Third - Fifth: Every hour. Billing Events \u00b6 These web hooks are triggered immediately when the event occurs, so depending on your environment, this could be many New subscriptions (new orders) Resizing Cancelling subscription Scaling container service Automatic phase transitions Billing Usage \u00b6 This hook is for the aggregated billing usage that\u2019s processed on the last day of the month. Here is an example output: [ { \"billing_resource\" : { \"billing_plan_id\" : 3 , \"external_id\" : \"\" , \"id\" : 12 }, \"container_id\" : 65 , \"container_service_id\" : 53 , \"device_id\" : null , \"external_id\" : null , \"period_end\" : \"2018-08-01 16:59:59 UTC\" , \"period_start\" : \"2018-06-30 23:00:00 UTC\" , \"product\" : { \"external_id\" : \"\" , \"id\" : 6 , \"name\" : \"Container XS\" }, \"qty\" : 762.0 , \"subscription_id\" : 59 , \"subscription_product_id\" : 175 , \"total\" : 3.048 , \"user\" : { \"email\" : \"user@example.com\" , \"external_id\" : \"1\" , \"id\" : 8 } } ]","title":"WebHooks"},{"location":"getting_started/integrations/webhooks/#webhooks","text":"ComputeStacks offers administrators a few different web hook options. All of these can be set in the admin under Settings . To accept the web hook, your system must return a status code 202 ACCEPTED . Otherwise, our system will retry the web hook (up to 5 times). The retry schedule is as follows: First: One minute later Second: 15 minutes later Third - Fifth: Every hour.","title":"Webhooks"},{"location":"getting_started/integrations/webhooks/#billing-events","text":"These web hooks are triggered immediately when the event occurs, so depending on your environment, this could be many New subscriptions (new orders) Resizing Cancelling subscription Scaling container service Automatic phase transitions","title":"Billing Events"},{"location":"getting_started/integrations/webhooks/#billing-usage","text":"This hook is for the aggregated billing usage that\u2019s processed on the last day of the month. Here is an example output: [ { \"billing_resource\" : { \"billing_plan_id\" : 3 , \"external_id\" : \"\" , \"id\" : 12 }, \"container_id\" : 65 , \"container_service_id\" : 53 , \"device_id\" : null , \"external_id\" : null , \"period_end\" : \"2018-08-01 16:59:59 UTC\" , \"period_start\" : \"2018-06-30 23:00:00 UTC\" , \"product\" : { \"external_id\" : \"\" , \"id\" : 6 , \"name\" : \"Container XS\" }, \"qty\" : 762.0 , \"subscription_id\" : 59 , \"subscription_product_id\" : 175 , \"total\" : 3.048 , \"user\" : { \"email\" : \"user@example.com\" , \"external_id\" : \"1\" , \"id\" : 8 } } ]","title":"Billing Usage"},{"location":"getting_started/integrations/whmcs_plugin/","text":"WHMCS Integration \u00b6 Overview \u00b6 The ComputeStacks integration for WHMCS provides an easy onboarding experience for your customers. It offers a customized ClientArea integration, along with seamless onboarding. Each service in WHMCS corresponds to a single ComputeStacks account ClientArea output for quick overview Easy SingleSignOn buttons in both ClientArea and Admin Support for charging an initial deposit on registration Import CS accounts into WHMCS using the Server Sync Tool Service Terminations This plugin will not delete any services in ComputeStacks. When a WHMCS service is terminated, this plugin suspends the account in ComputeStacks, which stops all running services. You will then need to manually delete the user. If you wish to have WHMCS automatically delete the users in ComputeStacks, please contact your CS support team. Installation \u00b6 Download Our Plugin and upload the contents to your WHMCS server. The folder structure included should match your local installation. Ultimately, the computestacks directory under whmcs/modules/servers/ , should be placed on your WHMCS server at modules/servers/ . The current version requires WHMCS v8+. For WHMCS v7 support, please use our latest v2 version . Configure WHMCS \u00b6 Add Server \u00b6 Create a new server in WHMCS and supply your ComputeStacks installation details. You will need to generate API Credentials using an admin user in ComputeStacks. The API Key in ComputeStacks corresponds to the username field in WHMCS, and the API Secret is the password. WHMCS Product \u00b6 Our integration is designed to work in conjunction with our User Group functionality within ComputeStacks. This is useful if you decide to offer different tiers of service. To create your ComputeStacks product, create a new product group and product with the settings: Pricing: With Deposit: Choose OneTime fee and set your deposit amount Without Deposit: Choose Free Module: ComputeStacks User Group: Your choice Apply Credit: If you added a one-time fee, you can optionally convert that to an account credit. Note: This will take place at the moment the order is paid. Module Setup: With Account Credits, we recommend either: Automatically setup the product as soon as the first payment is received (preferred for best user experience) Automatically setup the product when you manually accept a pending order Without Account Credits, we recommend either: Automatically setup the product as soon as an order is placed (preferred for best user experience) Automatically setup the product when you manually accept a pending order Configure ComputeStacks \u00b6 Before we proceed, you will need to first generate API credentials for ComputeStacks. Here are the roles that we need assigned: Billing -> AddBillableItem Client -> GetClients Client -> GetClientsDetails Client -> GetClientsProducts Products -> GetProducts Products -> UpdateClientProduct Servers -> GetHealthStatus WHMCS Access Control Please see the documentation . You can either allow the IP Address of ComputeStacks, or configure an Access Key. In ComputeStacks, navigate to the Administrator -> Advanced Settings -> Billing . Edit BILLING_MODULE and set the value to Whmcs and click save. Once you do, additional settings will become available. Set both WHMCS_API_SECRET and WHMCS_API_KEY If you set an API Access Key in WHMCS, then you can enter that under WHMCS_ACCESS_KEY . With WHMCS enabled, ComputeStacks will by default disable the registration form to ensure all new users come through WHMCS. Administrators can manually create users from within the admin. If you wish to keep the registration form on, you can manually enable that under Settings -> Advanced Settings -> General and setting SIGNUP_FORM to t . Keep in mind that users will be able to register and will not be charged for their usage unless you manually set their external_id to the ID of their WHMCS service. The final step is to set your prices under Settings -> Billing Plans . Upgrading From v1 \u00b6 Version 2 of our WHMCS plugin is a major change from V1 and will require that updates are made to both ComputeStacks and WHMCS. Feature Matrix Table Feature v1 v2 Accounts 1 WHMCS user = 1 CS User WHMCS Users can have multiple CS Accounts (Service = CS Account) ClientArea No ClientArea integration ClientArea Integration with SSO for both users and admins Pre-Paid Billing (Monthly) ComputeStacks would generate an order for each billable action (upgrades/new orders/scaling), redirect the user to the invoice (if it created). Our WHMCS plugin would then attempt to redirect the user back to CS after payment. no longer available, hourly only. Hourly Billing CS will aggregate usage and create billable items No Change Ordering in WHMCS Not available Supported CS Registration Users who signed up in CS would automatically be created in WHMCS. Logging into CS used their WHMCS ClientArea credentials CS Users are not created in WHMCS. Logging into CS uses the username/password set by the WHMCS service module. Upgrading \u00b6 If you do not have any pre-paid monthly users with active services, then the upgrade process is fairly straight forward. Simply remove the old plugin and install our new one following the installation instructions found in our README.md file. You may then use the Server Sync Tool to create local services to enable ClientArea support. During the import process, be sure to set \u201creset password\u201d. This will link the WHMCS service to their ComputeStacks account, and set the password that\u2019s generated by WHMCS. If there are existing monthly pre-paid customers, then you will want to work through the following items: Create a new metered billing plan in CS (or update the old one and change all the prices to hourly) and assign all of those users to that billing plan. Delete all the existing pre-paid monthly services in WHMCS. DO NOT RUN ANY MODULE COMMANDS! This will also delete the service in ComputeStacks! Create the product in WHMCS, following our README.md . Run the server sync tool in WHMCS","title":"WHMCS"},{"location":"getting_started/integrations/whmcs_plugin/#whmcs-integration","text":"","title":"WHMCS Integration"},{"location":"getting_started/integrations/whmcs_plugin/#overview","text":"The ComputeStacks integration for WHMCS provides an easy onboarding experience for your customers. It offers a customized ClientArea integration, along with seamless onboarding. Each service in WHMCS corresponds to a single ComputeStacks account ClientArea output for quick overview Easy SingleSignOn buttons in both ClientArea and Admin Support for charging an initial deposit on registration Import CS accounts into WHMCS using the Server Sync Tool Service Terminations This plugin will not delete any services in ComputeStacks. When a WHMCS service is terminated, this plugin suspends the account in ComputeStacks, which stops all running services. You will then need to manually delete the user. If you wish to have WHMCS automatically delete the users in ComputeStacks, please contact your CS support team.","title":"Overview"},{"location":"getting_started/integrations/whmcs_plugin/#installation","text":"Download Our Plugin and upload the contents to your WHMCS server. The folder structure included should match your local installation. Ultimately, the computestacks directory under whmcs/modules/servers/ , should be placed on your WHMCS server at modules/servers/ . The current version requires WHMCS v8+. For WHMCS v7 support, please use our latest v2 version .","title":"Installation"},{"location":"getting_started/integrations/whmcs_plugin/#configure-whmcs","text":"","title":"Configure WHMCS"},{"location":"getting_started/integrations/whmcs_plugin/#add-server","text":"Create a new server in WHMCS and supply your ComputeStacks installation details. You will need to generate API Credentials using an admin user in ComputeStacks. The API Key in ComputeStacks corresponds to the username field in WHMCS, and the API Secret is the password.","title":"Add Server"},{"location":"getting_started/integrations/whmcs_plugin/#whmcs-product","text":"Our integration is designed to work in conjunction with our User Group functionality within ComputeStacks. This is useful if you decide to offer different tiers of service. To create your ComputeStacks product, create a new product group and product with the settings: Pricing: With Deposit: Choose OneTime fee and set your deposit amount Without Deposit: Choose Free Module: ComputeStacks User Group: Your choice Apply Credit: If you added a one-time fee, you can optionally convert that to an account credit. Note: This will take place at the moment the order is paid. Module Setup: With Account Credits, we recommend either: Automatically setup the product as soon as the first payment is received (preferred for best user experience) Automatically setup the product when you manually accept a pending order Without Account Credits, we recommend either: Automatically setup the product as soon as an order is placed (preferred for best user experience) Automatically setup the product when you manually accept a pending order","title":"WHMCS Product"},{"location":"getting_started/integrations/whmcs_plugin/#configure-computestacks","text":"Before we proceed, you will need to first generate API credentials for ComputeStacks. Here are the roles that we need assigned: Billing -> AddBillableItem Client -> GetClients Client -> GetClientsDetails Client -> GetClientsProducts Products -> GetProducts Products -> UpdateClientProduct Servers -> GetHealthStatus WHMCS Access Control Please see the documentation . You can either allow the IP Address of ComputeStacks, or configure an Access Key. In ComputeStacks, navigate to the Administrator -> Advanced Settings -> Billing . Edit BILLING_MODULE and set the value to Whmcs and click save. Once you do, additional settings will become available. Set both WHMCS_API_SECRET and WHMCS_API_KEY If you set an API Access Key in WHMCS, then you can enter that under WHMCS_ACCESS_KEY . With WHMCS enabled, ComputeStacks will by default disable the registration form to ensure all new users come through WHMCS. Administrators can manually create users from within the admin. If you wish to keep the registration form on, you can manually enable that under Settings -> Advanced Settings -> General and setting SIGNUP_FORM to t . Keep in mind that users will be able to register and will not be charged for their usage unless you manually set their external_id to the ID of their WHMCS service. The final step is to set your prices under Settings -> Billing Plans .","title":"Configure ComputeStacks"},{"location":"getting_started/integrations/whmcs_plugin/#upgrading-from-v1","text":"Version 2 of our WHMCS plugin is a major change from V1 and will require that updates are made to both ComputeStacks and WHMCS. Feature Matrix Table Feature v1 v2 Accounts 1 WHMCS user = 1 CS User WHMCS Users can have multiple CS Accounts (Service = CS Account) ClientArea No ClientArea integration ClientArea Integration with SSO for both users and admins Pre-Paid Billing (Monthly) ComputeStacks would generate an order for each billable action (upgrades/new orders/scaling), redirect the user to the invoice (if it created). Our WHMCS plugin would then attempt to redirect the user back to CS after payment. no longer available, hourly only. Hourly Billing CS will aggregate usage and create billable items No Change Ordering in WHMCS Not available Supported CS Registration Users who signed up in CS would automatically be created in WHMCS. Logging into CS used their WHMCS ClientArea credentials CS Users are not created in WHMCS. Logging into CS uses the username/password set by the WHMCS service module.","title":"Upgrading From v1"},{"location":"getting_started/integrations/whmcs_plugin/#upgrading","text":"If you do not have any pre-paid monthly users with active services, then the upgrade process is fairly straight forward. Simply remove the old plugin and install our new one following the installation instructions found in our README.md file. You may then use the Server Sync Tool to create local services to enable ClientArea support. During the import process, be sure to set \u201creset password\u201d. This will link the WHMCS service to their ComputeStacks account, and set the password that\u2019s generated by WHMCS. If there are existing monthly pre-paid customers, then you will want to work through the following items: Create a new metered billing plan in CS (or update the old one and change all the prices to hourly) and assign all of those users to that billing plan. Delete all the existing pre-paid monthly services in WHMCS. DO NOT RUN ANY MODULE COMMANDS! This will also delete the service in ComputeStacks! Create the product in WHMCS, following our README.md . Run the server sync tool in WHMCS","title":"Upgrading"},{"location":"user_guide/","text":"User Guide \u00b6 Welcome to the end-user guide for ComputeStacks! Frequently Asked Questions \u00b6 How do I access my container? You may access your projects private network and files through our SSH/SFTP container. ( learn more ) Depending on your use case, you may also enable public access directly to your container by editing the ingress rule. What if the image I want isn\u2019t available? If you\u2019re looking for a specific image, we suggest you reach out to your service provider for help in getting that added to ComputeStacks. Additionally, if you\u2019re comfortable building your own images, please refer to our Building Images documentation. How do I send mail from my website? Please see our how to send mail guide. Getting Help \u00b6 If you\u2019re a customer of ComputeStacks, you may contact us through our normal support channels. If you\u2019re a customer of one of our providers, please contact your hosting provider through their normal support system.","title":"Overview"},{"location":"user_guide/#user-guide","text":"Welcome to the end-user guide for ComputeStacks!","title":"User Guide"},{"location":"user_guide/#frequently-asked-questions","text":"How do I access my container? You may access your projects private network and files through our SSH/SFTP container. ( learn more ) Depending on your use case, you may also enable public access directly to your container by editing the ingress rule. What if the image I want isn\u2019t available? If you\u2019re looking for a specific image, we suggest you reach out to your service provider for help in getting that added to ComputeStacks. Additionally, if you\u2019re comfortable building your own images, please refer to our Building Images documentation. How do I send mail from my website? Please see our how to send mail guide.","title":"Frequently Asked Questions"},{"location":"user_guide/#getting-help","text":"If you\u2019re a customer of ComputeStacks, you may contact us through our normal support channels. If you\u2019re a customer of one of our providers, please contact your hosting provider through their normal support system.","title":"Getting Help"},{"location":"user_guide/backups/","text":"Backup System \u00b6 Included in ComputeStacks, is a powerful backup solution that allows for both automated and on-demand backups of your volumes. Key Features \u00b6 De-Duplication of stored data Encrypted Built-in MySQL agent for low-impact, point in time snapshots. Control how often backups are taken, and how many copies to keep 1-click restore Configuring Backups \u00b6 Backups are configured on a per-volume basis, and not per-container. It is primarily for this reason we recommend using on a single volume with your container. TODO \u00b6 Customize retention settings Understanding the extra commands section How does a restore process work","title":"Backups"},{"location":"user_guide/backups/#backup-system","text":"Included in ComputeStacks, is a powerful backup solution that allows for both automated and on-demand backups of your volumes.","title":"Backup System"},{"location":"user_guide/backups/#key-features","text":"De-Duplication of stored data Encrypted Built-in MySQL agent for low-impact, point in time snapshots. Control how often backups are taken, and how many copies to keep 1-click restore","title":"Key Features"},{"location":"user_guide/backups/#configuring-backups","text":"Backups are configured on a per-volume basis, and not per-container. It is primarily for this reason we recommend using on a single volume with your container.","title":"Configuring Backups"},{"location":"user_guide/backups/#todo","text":"Customize retention settings Understanding the extra commands section How does a restore process work","title":"TODO"},{"location":"user_guide/developer-tools/","text":"Developer Tools \u00b6 Automating and extending functionality \u00b6 We offer a full REST API, our current documentation is available here . Metadata Service \u00b6 To aid in building complex container setups, ComputeStacks provides an easy metadata service to running containers. This allows any running container to authenticate with the ComputeStacks API and access realtime information about all the running services and containers in their project. Here is an example curl request that can be run from any container: curl -H \"Content-Type: application/json\" -H \"Authorization: Bearer ${ METADATA_AUTH } \" $METADATA_URL Example Response { \"current_service_id\" : 449 , \"project\" : { \"id\" : 271 , \"name\" : \"test\" }, \"services\" : [ { \"id\" : 449 , \"name\" : \"elated-newton271\" , \"label\" : \"elated-newton271\" , \"created_at\" : \"2020-01-09T23:29:24.161Z\" , \"updated_at\" : \"2020-01-09T23:29:32.946Z\" , \"domains\" : [ \"elated-newton271217.a.cs.local\" ], \"image\" : { \"id\" : 131 , \"label\" : \"nginx\" , \"role\" : \"nginx\" , \"category\" : \"web\" , \"tags\" : [] }, \"containers\" : [ { \"id\" : 465 , \"name\" : \"elated-newton271-480\" , \"ip\" : \"10.100.0.116\" } ], \"ingress_rules\" : [ { \"proto\" : \"http\" , \"port\" : 80 , \"external_access\" : true , \"backend_ssl\" : false , \"tcp_proxy_opt\" : \"none\" , \"nat\" : null } ], \"settings\" : [ { \"id\" : 448 , \"name\" : \"some_param\" , \"label\" : \"My Param\" , \"param_type\" : \"static\" , \"decrypted_value\" : \"my param\" , \"created_at\" : \"2020-01-09T22:16:32.600Z\" , \"updated_at\" : \"2020-01-09T22:16:32.600Z\" } ] } ] } Authentication and Single Sign On (SSO) \u00b6 ComputeStacks includes an OAuth2 authentication system which allows you to build custom applications that allow endusers to authenticate directly with ComputeStacks. More information is available in our API Documentation","title":"Developer Tools"},{"location":"user_guide/developer-tools/#developer-tools","text":"","title":"Developer Tools"},{"location":"user_guide/developer-tools/#automating-and-extending-functionality","text":"We offer a full REST API, our current documentation is available here .","title":"Automating and extending functionality"},{"location":"user_guide/developer-tools/#metadata-service","text":"To aid in building complex container setups, ComputeStacks provides an easy metadata service to running containers. This allows any running container to authenticate with the ComputeStacks API and access realtime information about all the running services and containers in their project. Here is an example curl request that can be run from any container: curl -H \"Content-Type: application/json\" -H \"Authorization: Bearer ${ METADATA_AUTH } \" $METADATA_URL Example Response { \"current_service_id\" : 449 , \"project\" : { \"id\" : 271 , \"name\" : \"test\" }, \"services\" : [ { \"id\" : 449 , \"name\" : \"elated-newton271\" , \"label\" : \"elated-newton271\" , \"created_at\" : \"2020-01-09T23:29:24.161Z\" , \"updated_at\" : \"2020-01-09T23:29:32.946Z\" , \"domains\" : [ \"elated-newton271217.a.cs.local\" ], \"image\" : { \"id\" : 131 , \"label\" : \"nginx\" , \"role\" : \"nginx\" , \"category\" : \"web\" , \"tags\" : [] }, \"containers\" : [ { \"id\" : 465 , \"name\" : \"elated-newton271-480\" , \"ip\" : \"10.100.0.116\" } ], \"ingress_rules\" : [ { \"proto\" : \"http\" , \"port\" : 80 , \"external_access\" : true , \"backend_ssl\" : false , \"tcp_proxy_opt\" : \"none\" , \"nat\" : null } ], \"settings\" : [ { \"id\" : 448 , \"name\" : \"some_param\" , \"label\" : \"My Param\" , \"param_type\" : \"static\" , \"decrypted_value\" : \"my param\" , \"created_at\" : \"2020-01-09T22:16:32.600Z\" , \"updated_at\" : \"2020-01-09T22:16:32.600Z\" } ] } ] }","title":"Metadata Service"},{"location":"user_guide/developer-tools/#authentication-and-single-sign-on-sso","text":"ComputeStacks includes an OAuth2 authentication system which allows you to build custom applications that allow endusers to authenticate directly with ComputeStacks. More information is available in our API Documentation","title":"Authentication and Single Sign On (SSO)"},{"location":"user_guide/container_images/elastic-search/","text":"ElasticSearch with Wordpress \u00b6 This guide specifically covers integrating ElasticSearch for Wordpress, however many of the procedures can be applied to any existing application. Our ElasticSearch implementation was specifically designed to work with Wordpress, ElasticPress , and include support for auto-suggesting search results. We run nginx as a secure frontend for our ElasticSearch service in order to provide both password authentication, and secure read-only access for auto-suggest results. Installation \u00b6 Installation of ElasticSearch is as easy and choosing the service during the order process in ComputeStacks. All of the initial configuration will be handled automatically. Installation Video on cPanel Configure Wordpress \u00b6 Install ElasticPress from the plugin section in wp-admin and activate it. Skip past the hosted options and choose self host and enter your ElasticSearch details. If you\u2019re using the ComputeStacks cPanel interface, the full URL including authentication details can be copy-pasted from the control panel. (Replace [password] with your elastic search password) If you\u2019re using our full standalone controller, then you will need to find the password from your service overview page and manually type in the url: https://admin:[password]@[your-url] The last step is to setup auto-suggest (optional). The first thing you will need to do is find the name of your elastic search index. This is dynamically generated based on the domain name of your wordpress site, so you will need to update this if you ever change your url. Under ElasticPress, click Index Health . Listed in the upper left-hand corner will be your index name. Now, navigate to Settings in ElasticPress and expand the auto-suggest section and enable auto-suggest, and add your URL, which will be in the form of: If you\u2019re using our cPanel interface, the autosuggest url is also available there to copy/paste. https://your-url/autosuggest/[indexName] Adding ElasticSearch to Wordpress Video","title":"ElasticSearch"},{"location":"user_guide/container_images/elastic-search/#elasticsearch-with-wordpress","text":"This guide specifically covers integrating ElasticSearch for Wordpress, however many of the procedures can be applied to any existing application. Our ElasticSearch implementation was specifically designed to work with Wordpress, ElasticPress , and include support for auto-suggesting search results. We run nginx as a secure frontend for our ElasticSearch service in order to provide both password authentication, and secure read-only access for auto-suggest results.","title":"ElasticSearch with Wordpress"},{"location":"user_guide/container_images/elastic-search/#installation","text":"Installation of ElasticSearch is as easy and choosing the service during the order process in ComputeStacks. All of the initial configuration will be handled automatically. Installation Video on cPanel","title":"Installation"},{"location":"user_guide/container_images/elastic-search/#configure-wordpress","text":"Install ElasticPress from the plugin section in wp-admin and activate it. Skip past the hosted options and choose self host and enter your ElasticSearch details. If you\u2019re using the ComputeStacks cPanel interface, the full URL including authentication details can be copy-pasted from the control panel. (Replace [password] with your elastic search password) If you\u2019re using our full standalone controller, then you will need to find the password from your service overview page and manually type in the url: https://admin:[password]@[your-url] The last step is to setup auto-suggest (optional). The first thing you will need to do is find the name of your elastic search index. This is dynamically generated based on the domain name of your wordpress site, so you will need to update this if you ever change your url. Under ElasticPress, click Index Health . Listed in the upper left-hand corner will be your index name. Now, navigate to Settings in ElasticPress and expand the auto-suggest section and enable auto-suggest, and add your URL, which will be in the form of: If you\u2019re using our cPanel interface, the autosuggest url is also available there to copy/paste. https://your-url/autosuggest/[indexName] Adding ElasticSearch to Wordpress Video","title":"Configure Wordpress"},{"location":"user_guide/container_images/redis/","text":"Redis Guide \u00b6 Redis is a very fast, lightweight, single-threaded key-value store. While it\u2019s typically used as an in-memory cache, it\u2019s also capable of acting as a persistent data store for your application. Within the ComputeStacks environment, the default configuration makes a few opinionated decisions on your behalf, however it\u2019s easy to create your own custom redis image for your unique situation. Key Features of the default Redis Configuration \u00b6 In-memory only, no disk snapshots Password protected TLS encryption when connecting to redis externally (outside the project) The most common use case for this is when using our cPanel integration and you want to add redis to a site hosted on cpanel. In order to use TLS with PHP, you must be using php v7.2+ , and phpredis v5.0+ . Connecting to Redis \u00b6 Inside the project \u00b6 Connecting to redis from an application inside the same project will work just like normal. Simply enter the private IP address of the redis container, add the authentication password, and connect. The port will be the default 6379 . External Connections \u00b6 Connecting from outside your redis project will require a few additional steps. Depending on your providers setup, you may already have your redis container exposed to the world. To verify that, navigate to your redis service and look at the ingress rules. You want to see a number under Public Port , and the protocol should be tcp+tls -> tcp . The protocol just means that the global load balancer is performing tls termination for you, and passing the un-encrypted tcp connection back to redis (redis does not natively support tls) . If you don\u2019t have a public port, or the protocol does not say tls , you will want to edit the ingress rule and perform the following steps: Check Enable External Access? Set the Protocol to TCP+TLS . View Public Connection Details Controller Example cPanel Example Connecting Your Application In your application, you will want to use the following URL in your app: tls://<my-domain> . If your application requires the port be included in the URI string, then you can add :<public-port> to that. You will also want to add the redis password provided by ComputeStacks. Example PHP connection <?php echo \"<h1>Redis Test Connection</h1>\" ; echo '<strong>Current PHP version: ' . phpversion () . \"</strong>\" ; echo \"<hr>\" ; echo \"Connection Result: \" ; $redis = new Redis (); $redis -> connect ( 'tls://url' , port ); $redis -> auth ( 'password' ); echo $redis -> ping ( \"It works!\" ); Video Demos \u00b6 (VIDEO) Adding Redis to cPanel (VIDEO) Adding Redis to Wordpress","title":"Redis"},{"location":"user_guide/container_images/redis/#redis-guide","text":"Redis is a very fast, lightweight, single-threaded key-value store. While it\u2019s typically used as an in-memory cache, it\u2019s also capable of acting as a persistent data store for your application. Within the ComputeStacks environment, the default configuration makes a few opinionated decisions on your behalf, however it\u2019s easy to create your own custom redis image for your unique situation.","title":"Redis Guide"},{"location":"user_guide/container_images/redis/#key-features-of-the-default-redis-configuration","text":"In-memory only, no disk snapshots Password protected TLS encryption when connecting to redis externally (outside the project) The most common use case for this is when using our cPanel integration and you want to add redis to a site hosted on cpanel. In order to use TLS with PHP, you must be using php v7.2+ , and phpredis v5.0+ .","title":"Key Features of the default Redis Configuration"},{"location":"user_guide/container_images/redis/#connecting-to-redis","text":"","title":"Connecting to Redis"},{"location":"user_guide/container_images/redis/#inside-the-project","text":"Connecting to redis from an application inside the same project will work just like normal. Simply enter the private IP address of the redis container, add the authentication password, and connect. The port will be the default 6379 .","title":"Inside the project"},{"location":"user_guide/container_images/redis/#external-connections","text":"Connecting from outside your redis project will require a few additional steps. Depending on your providers setup, you may already have your redis container exposed to the world. To verify that, navigate to your redis service and look at the ingress rules. You want to see a number under Public Port , and the protocol should be tcp+tls -> tcp . The protocol just means that the global load balancer is performing tls termination for you, and passing the un-encrypted tcp connection back to redis (redis does not natively support tls) . If you don\u2019t have a public port, or the protocol does not say tls , you will want to edit the ingress rule and perform the following steps: Check Enable External Access? Set the Protocol to TCP+TLS .","title":"External Connections"},{"location":"user_guide/container_images/redis/#video-demos","text":"(VIDEO) Adding Redis to cPanel (VIDEO) Adding Redis to Wordpress","title":"Video Demos"},{"location":"user_guide/container_images/whmcs/","text":"Running WHMCS on ComputeStacks \u00b6 Using our provided image , it\u2019s easy to deploy and manage WHMCS on ComputeStacks. Our image is based on our php7.3-litespeed image which includes support for cron. Key Facts: All files are stored in /var/www/html Cron is managed here: /var/www/html/crontab Simply add your changes here and restart the container to activate them The document root for this container will be /var/www/html/whmcs/whmcs-public . This layout allows you to make the recommended modifications to WHMCS by moving templates_c , downloads , and attachments , outside of the public directory. Complete Installation \u00b6 After launching for the first time, the container will automatically create the database and install WHMCS to the directory structure listed above. To finalize the process, you will need to complete the last steps by using the WHMCS web installer. Navigate to your site\u2019s URL and follow the steps they list. Config Option Value Database Host This will be the private IP Address of the database container that would have been added during the initial order Database Name This will be the name of the WHMCS service without the dash. For example, if your WHMCS service was friendly-newton3 , the dbname would be friendlynewton3 . Database Port 3306 Database Username root Database Password This will be visible under the database service in ComputeStacks. Next Steps \u00b6 Please review the WHMCS Further Security Steps","title":"WHMCS"},{"location":"user_guide/container_images/whmcs/#running-whmcs-on-computestacks","text":"Using our provided image , it\u2019s easy to deploy and manage WHMCS on ComputeStacks. Our image is based on our php7.3-litespeed image which includes support for cron. Key Facts: All files are stored in /var/www/html Cron is managed here: /var/www/html/crontab Simply add your changes here and restart the container to activate them The document root for this container will be /var/www/html/whmcs/whmcs-public . This layout allows you to make the recommended modifications to WHMCS by moving templates_c , downloads , and attachments , outside of the public directory.","title":"Running WHMCS on ComputeStacks"},{"location":"user_guide/container_images/whmcs/#complete-installation","text":"After launching for the first time, the container will automatically create the database and install WHMCS to the directory structure listed above. To finalize the process, you will need to complete the last steps by using the WHMCS web installer. Navigate to your site\u2019s URL and follow the steps they list. Config Option Value Database Host This will be the private IP Address of the database container that would have been added during the initial order Database Name This will be the name of the WHMCS service without the dash. For example, if your WHMCS service was friendly-newton3 , the dbname would be friendlynewton3 . Database Port 3306 Database Username root Database Password This will be visible under the database service in ComputeStacks.","title":"Complete Installation"},{"location":"user_guide/container_images/whmcs/#next-steps","text":"Please review the WHMCS Further Security Steps","title":"Next Steps"},{"location":"user_guide/container_images/wordpress/","text":"Wordpress \u00b6 ComputeStacks offers an Open LiteSpeed based container image, designed to offer compatibility with common .htaccess directives, while offering exceptional performance . Caching Plugin \u00b6 Litespeed has developed their own caching plugin , which we highly recommend you use. We have found stability issues with other popular wordpress plugins. The Litespeed plugin has full support for adding a Redis cache. Sending Mail \u00b6 By default, none of our images include any kind of MTA. Additionally, some of our providers explicitly block port 25 on their container nodes. Our default wordpress image includes an smtp plugin that you may activate and use. Please see our guide to sending mail . WP CLI \u00b6 wp is installed and ready to use via our SSH container.","title":"Wordpress"},{"location":"user_guide/container_images/wordpress/#wordpress","text":"ComputeStacks offers an Open LiteSpeed based container image, designed to offer compatibility with common .htaccess directives, while offering exceptional performance .","title":"Wordpress"},{"location":"user_guide/container_images/wordpress/#caching-plugin","text":"Litespeed has developed their own caching plugin , which we highly recommend you use. We have found stability issues with other popular wordpress plugins. The Litespeed plugin has full support for adding a Redis cache.","title":"Caching Plugin"},{"location":"user_guide/container_images/wordpress/#sending-mail","text":"By default, none of our images include any kind of MTA. Additionally, some of our providers explicitly block port 25 on their container nodes. Our default wordpress image includes an smtp plugin that you may activate and use. Please see our guide to sending mail .","title":"Sending Mail"},{"location":"user_guide/container_images/wordpress/#wp-cli","text":"wp is installed and ready to use via our SSH container.","title":"WP CLI"},{"location":"user_guide/container_images/wordpress_apache/","text":"Migrate from Apache to LiteSpeed \u00b6 Our default Wordpress installation now uses the Open LiteSpeed . This guide will aid in your transition to our new image. Due to changes in the volume structure between the images, a normal upgrade is not possible. Instead, this guide will walk you through migrating your data from your old container, to your new litespeed-based wordpress container. Overview \u00b6 Before migrating to the new image, be sure to understand a few important changes: The webserver will be moved from Apache to OpenLiteSpeed . While all widely used .htaccess directives are supported, you may find that some lesser-used rules may not function. Please consult the Open Litespeed documentation if you find that your site is not behaving as expected. Caching: We recommend that you use Litespeed\u2019s own Wordpress caching plugin . This is designed to work best with the Open Litespeed web server and will be the most stable for your site. The Litespeed caching plugin supports many common caching techniques including page caching, css/js minification and optimization, image optimization, and object caching through redis or memcached. However, we have had success using the W3T Caching plugin with browser caching disabled (this is handled by Litespeed). You will find that there is now a web administrator. You can use this to make configuration changes to the litespeed webserver; these changes are persisted on a separate volume attached to your container. Preflight \u00b6 If you\u2019re using horizontal scaling, scale your service back to 1 container. Take a backup of both your database and wordpress containers. If you have any caching plugins enabled, clear their cache and disable them. Migration \u00b6 The migration process is fairly simple, and involves creating a new wordpress & database container with the litespeed image and migrating your wordpress data over. Create a new Wordpress Litespeed container and it\u2019s associated MariaDB 10.3 container. Stop both the existing Wordpress container, and the new wordpress container. Migrate Database \u00b6 This is current as of v5.2. In a future CS update, you will be able to do an in-place container upgrade of the database Perform a mysql dump on your existing database, and migrate it to the new database container. Migrate wordpress data \u00b6 Before Moving Data Locate and take note of the SFTP Volume Paths under the SFTP/SSH credentials section within ComputeStacks. The new container should be in the form of: /home/sftpuser/apps/<service-name>/wordpress The old container should be in the form of: /home/sftpuser/apps/<service-name>/Wordpress There is a difference in folder structure between the new and old wordpress containers. Be sure that when you\u2019re copying files, you\u2019re copying from the website root of one site to another. In the following examples, we are assuming that the web root of both containers are: NEW: /home/sftpuser/apps/<service-name>/wordpress/html/wordpress/ OLD: /home/sftpuser/apps/<service-name>/Wordpress/ Perform Migration SSH Into the SFTP Container of the NEW Wordpress container you just created. Delete the default wordpress installation rm -rf /home/sftpuser/apps/<service-name>/wordpress/html/wordpress/ Now determine if this SFTP container is also in use by old wordpress site by trying to cd to the SFTP volume path of the OLD wordpress container. IF that exists, proceed to 2(a), otherwise use 2(b). (A) Local rsync: old site to new volume Data is available in the same SFTP/SSH container rsync -aP /home/sftpuser/apps/<old-service-name>/Wordpress/ /home/sftpuser/apps/<new-service-name>/wordpress/html/wordpress/ (B) Remote rsync: old site to new volume For this, you will need the IP, port, and password of the old sftp container. rsync -e 'ssh -p <port-of-old-sftp-container>' -aP sftpuser@<ip-of-old-sftp-container>:/home/sftpuser/apps/<old-service-name>/Wordpress/ /home/sftpuser/apps/<new-service-name>/wordpress/html/wordpress/ Modify wp-config.php using vim or nano and update the IP address & password of the database. The database name should be the same. Adjust file permissions of the new wordpress site cd /home/sftpuser/apps/<new-service-name>/wordpress/html/wordpress/ \\ find . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Start the new wordpress container Edit the domain in the project and point the domain to the new service & ingress rule (port 80). Verify your site is working and re-enable caching (preferably with the the Litespeed Caching Plugin ) (optional) Scale out horizontally (optional) Delete the old wordpress apache container and the old database container Troubleshooting \u00b6 The site does not load, or displays a blank white page This may be caused by incorrect file/folder permissions that Litespeed requires. You can quickly reset everything by running the following commands from the SFTP container: cd ~/apps/new-litespeed-container/webroot/ find . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Note: Both find commands may take some time to run depending on how many files & folders you have in your site.","title":"Wordpress (Apache)"},{"location":"user_guide/container_images/wordpress_apache/#migrate-from-apache-to-litespeed","text":"Our default Wordpress installation now uses the Open LiteSpeed . This guide will aid in your transition to our new image. Due to changes in the volume structure between the images, a normal upgrade is not possible. Instead, this guide will walk you through migrating your data from your old container, to your new litespeed-based wordpress container.","title":"Migrate from Apache to LiteSpeed"},{"location":"user_guide/container_images/wordpress_apache/#overview","text":"Before migrating to the new image, be sure to understand a few important changes: The webserver will be moved from Apache to OpenLiteSpeed . While all widely used .htaccess directives are supported, you may find that some lesser-used rules may not function. Please consult the Open Litespeed documentation if you find that your site is not behaving as expected. Caching: We recommend that you use Litespeed\u2019s own Wordpress caching plugin . This is designed to work best with the Open Litespeed web server and will be the most stable for your site. The Litespeed caching plugin supports many common caching techniques including page caching, css/js minification and optimization, image optimization, and object caching through redis or memcached. However, we have had success using the W3T Caching plugin with browser caching disabled (this is handled by Litespeed). You will find that there is now a web administrator. You can use this to make configuration changes to the litespeed webserver; these changes are persisted on a separate volume attached to your container.","title":"Overview"},{"location":"user_guide/container_images/wordpress_apache/#preflight","text":"If you\u2019re using horizontal scaling, scale your service back to 1 container. Take a backup of both your database and wordpress containers. If you have any caching plugins enabled, clear their cache and disable them.","title":"Preflight"},{"location":"user_guide/container_images/wordpress_apache/#migration","text":"The migration process is fairly simple, and involves creating a new wordpress & database container with the litespeed image and migrating your wordpress data over. Create a new Wordpress Litespeed container and it\u2019s associated MariaDB 10.3 container. Stop both the existing Wordpress container, and the new wordpress container.","title":"Migration"},{"location":"user_guide/container_images/wordpress_apache/#migrate-database","text":"This is current as of v5.2. In a future CS update, you will be able to do an in-place container upgrade of the database Perform a mysql dump on your existing database, and migrate it to the new database container.","title":"Migrate Database"},{"location":"user_guide/container_images/wordpress_apache/#migrate-wordpress-data","text":"","title":"Migrate wordpress data"},{"location":"user_guide/container_images/wordpress_apache/#troubleshooting","text":"The site does not load, or displays a blank white page This may be caused by incorrect file/folder permissions that Litespeed requires. You can quickly reset everything by running the following commands from the SFTP container: cd ~/apps/new-litespeed-container/webroot/ find . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Note: Both find commands may take some time to run depending on how many files & folders you have in your site.","title":"Troubleshooting"},{"location":"user_guide/core-concepts/mail/","text":"How to send mail \u00b6 By default, none of our images include any kind of MTA. Some of our providers explicitly block port 25 on their container nodes, so even if you add an MTA to your container image, sending mail may still fail. In addition to the technical limitations, due to the lack of mail volume and other factors, mail sent from your container may fail to reach the intended recipient. For this reason, we advise all our customers to use a third-party SMTP service. Example SMTP services: Postmark Sendinblue","title":"Sending Mail"},{"location":"user_guide/core-concepts/mail/#how-to-send-mail","text":"By default, none of our images include any kind of MTA. Some of our providers explicitly block port 25 on their container nodes, so even if you add an MTA to your container image, sending mail may still fail. In addition to the technical limitations, due to the lack of mail volume and other factors, mail sent from your container may fail to reach the intended recipient. For this reason, we advise all our customers to use a third-party SMTP service. Example SMTP services: Postmark Sendinblue","title":"How to send mail"},{"location":"user_guide/core-concepts/ssh/","text":"Connecting to your container \u00b6 Overview \u00b6 Unlike a traditional hosting environment, ssh & sftp access is not available directly for containers. To be able to offer this convenience, we deploy a special ssh container inside your project. Finding your login details \u00b6 To view the connection details, you will navigate to your Container Service and look for the section titled \u201cSFTP & SSH Details\u201d. If you just deployed your service, you may have to wait for a few minutes for this to appear. Be sure to take note of the volume path below your credentials. You will need to drill into that directory to find your files. You can use either an SFTP client like Transmit, or connect directly via SSH. If you connect via SSH, you will find many of the most common tools such as: git, vim, npm, wpcli, and compose. You may also use this SSH container as your bastion portal to your other containers within that deployment.","title":"SSH & File Access"},{"location":"user_guide/core-concepts/ssh/#connecting-to-your-container","text":"","title":"Connecting to your container"},{"location":"user_guide/core-concepts/ssh/#overview","text":"Unlike a traditional hosting environment, ssh & sftp access is not available directly for containers. To be able to offer this convenience, we deploy a special ssh container inside your project.","title":"Overview"},{"location":"user_guide/core-concepts/ssh/#finding-your-login-details","text":"To view the connection details, you will navigate to your Container Service and look for the section titled \u201cSFTP & SSH Details\u201d. If you just deployed your service, you may have to wait for a few minutes for this to appear. Be sure to take note of the volume path below your credentials. You will need to drill into that directory to find your files. You can use either an SFTP client like Transmit, or connect directly via SSH. If you connect via SSH, you will find many of the most common tools such as: git, vim, npm, wpcli, and compose. You may also use this SSH container as your bastion portal to your other containers within that deployment.","title":"Finding your login details"},{"location":"user_guide/how-to/building-images/","text":"Building Images for ComputeStacks \u00b6 Before you start \u00b6 Docker Installation \u00b6 These examples require that you have access to a local installation of Docker. How do I install docker? If you don\u2019t already have it installed, you can install it from: Download Docker for Mac Download Docker for Windows Download Docker for Linux: Docker for Centos Docker for Debian Docker for Fedora Docker for Ubuntu Understand Container Registries \u00b6 The first step in building your docker container is choosing a place to store your image. This is how ComputeStacks will access the finished image and deploy it on the cluster. You can use popular options like Docker Hub , GitHub , or Gitlab , or you can use the built-in Container Registry that\u2019s included with ComputeStacks. To use ComputeStacks, login to your account and navigate to Container Registry . Click \u2018New Registry\u2019 if you don\u2019t already have one and give it a friendly name. A container registry can hold an unlimited number of images, so you only need one. However, if you\u2019re working with multiple people, you may want to create a registry per-project so you can selectively give access to the developers who need to push images. Once your registry is created, make note of the registry url and the username , and password. On your local instance of docker, open a command prompt and enter docker login <registry-url> . Make use of our Metadata service \u00b6 When building multi-container services, you can leverage our Metadata service to automate the configuration step of your application. For example, in our Elasticsearch image, we bundle a nginx container to provide an auth layer in front of ElasticSearch. We use the metadata service to discover the ElasticSearch instances and reconfigure the nginx load balancer automatically. External Resources \u00b6 Here are some great external resources to review: ComputeStacks docker image library Dockerfile reference Bitnami docker images Recommended Best Practices \u00b6 Don\u2019t reinvent the wheel Try to use well-maintained images as the foundation for your custom image. Enable SFTP Access To enable SFTP access to your container, you will need to ensure file permissions are set correctly. For this to work, you will need the match the UID/GID of the user in your container, with the user of the SFTP/SSH container. Here is an example from a Dockerfile for our PHP image: RUN usermod -u 1001 www-data \\ && groupmod -g 1001 www-data You will also need to make sure you run chown -R on any files added to the container during the build process. This can be done as another RUN command, or as part of your entrypoint script. You may also want to rest all file/folder permissions with something like this: find . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Don\u2019t hardcode configuration Do not hard code any database credentials, or other configuration that requires up front knowledge of the environment. Instead, make all the options configurable as ENV variables that are accessible to an entrypoint script that can configure your application at run time. See our Wordpress image as an example. Our entrypoint script takes the database settings from the environment, and configures the wordpress database settings. Adjust your webserver to retrieve the real IP of your visitors Your application will sit behind the ComputeStacks load balancer. This means your application will not have direct access to the real remote address of the visitor. In order to access that data, you will need to read the header X-Forwarded-For . Prevent SSL \u2018Too many redirects\u2019 error By default, most images are configured to listen on port 80 with the global load balancer performing SSL offloading on your behalf. In this situation, your app may not realize that the user is connected over SSL and try to redirect them to 443 . In this scenario, you will most likely have a redirect error. To accurately determine the protocol that the user is connecting over, you should look for the HTTP_X_FORWARDED_PROTO header being sent by our load balancer. Additionally, if you would like to also secure the connection between the application and our load balancer, you can optionally enable the Backend SSL setting in the appropriate ingress rule. For example, in our Wordpress image, we use: <?php if ( isset ( $_SERVER [ 'HTTP_X_FORWARDED_PROTO' ]) && $_SERVER [ 'HTTP_X_FORWARDED_PROTO' ] === 'https' ) { $_SERVER [ 'HTTPS' ] = 'on' ; } Persist your data in volumes By default, all docker containers are stateless. This means that the data within the container can go away at any time. To avoid losing data, it\u2019s important you define Volumes within ComputeStacks. ComputeStacks has no awareness of your Dockerfile, therefore volumes defined in your Dockerfile will have no effect. You must define them in ComputeStacks. Test your image! Be sure to test your image thoroughly before pushing to ComputeStacks. While we offer a lot of insight and data into your running container, the iterative process of resolving issues will be much faster locally then within the ComputeStacks environment. Define Your Image \u00b6 Now that you\u2019ve built, tested, and pushed, your image, it\u2019s time to configure it in ComputeStacks. Add your image \u00b6 You have two options when creating your image in ComputeStacks. If you\u2019re using our built-in container registry, then you can navigate to your regsitry and click the tag you want to use. This will take you to the new image page with the registry details pre-filled out. To create an image hosted elsewhere, create a new image directly from the image section and enter the details. Enable Scaling Does your image support horizontal scaling? If so, check this box and you\u2019ll be able to scale the app once it\u2019s deployed. On this screen you will notice a Command setting: This is how you can pass parameters directly to process running within the container. Here are some examples of how to use that setting: MySQL & MariaDB, we set the following command: --max_allowed_packet=268435456 . For Redis, we enable password authentication by referencing the password setting : /bin/sh -c redis-server --requirepass password is the name of a setting we defined for this image. see below . Use /bin/sh when overriding the command If you\u2019re trying to override the command itself and not just pass extra parameters, enclose your command with /bin/sh -c . Configure Parameters \u00b6 Here are two examples from our Wordpress service: Settings This is the heart of your container configuration. You will define user-supplied settings, or dynamically generated strings, with this section. You can reference the result of these as variables in both the command setting, or in environmental settings , for both this container, and any container that references this container. Volumes This is where you define persistent storage for containers. Enable SFTP will ensure you can SFTP into your image and access the files remotely. Environmental Variables These will be passed directly to the image as -e params. You have two choices: Static : Whatever you type will be passed to the container Variables : Dynamically generate the value Ingress Rules This tells ComputeStacks how to route traffic to your container. Port : What port is the container listening on? Protocol : Define the protocol. For HTTP/S, all external traffic will be routed from 80/443, to the port defined in the first step. TCP/TLS will be assigned a random port. Load Balancer Options Enable External Access : Setting this to true will enable external access from the load balancer. TCP Proxy Options : In general, this should always be disabled, otherwise you could break communication with your app. If your application specifically supports the send-proxy option, you can configure it here. ( learn more ) Cloudflare : This is only available when editing the ingress rule on a running service. This allows you to restrict access to your service to only Cloudflare. ( learn more ) Persistent Storage (Volumes) Any data changed or created by your container can be lost at any time, so it\u2019s important create volumes to persist your data. In addition to defining your volumes, you may also configure our integrated backup tool. ( learn more ) We recommend only 1 volume per container, however we recognize that sometimes that is not feasible. We, for example, use 2 volumes in our OpenLiteSpeed based images . The primary reason we recommend using a single volume is to ensure that when backups are performed, they\u2019re getting a consistent point in time snapshot of your data.","title":"Building ImageS"},{"location":"user_guide/how-to/building-images/#building-images-for-computestacks","text":"","title":"Building Images for ComputeStacks"},{"location":"user_guide/how-to/building-images/#before-you-start","text":"","title":"Before you start"},{"location":"user_guide/how-to/building-images/#docker-installation","text":"These examples require that you have access to a local installation of Docker. How do I install docker? If you don\u2019t already have it installed, you can install it from: Download Docker for Mac Download Docker for Windows Download Docker for Linux: Docker for Centos Docker for Debian Docker for Fedora Docker for Ubuntu","title":"Docker Installation"},{"location":"user_guide/how-to/building-images/#understand-container-registries","text":"The first step in building your docker container is choosing a place to store your image. This is how ComputeStacks will access the finished image and deploy it on the cluster. You can use popular options like Docker Hub , GitHub , or Gitlab , or you can use the built-in Container Registry that\u2019s included with ComputeStacks. To use ComputeStacks, login to your account and navigate to Container Registry . Click \u2018New Registry\u2019 if you don\u2019t already have one and give it a friendly name. A container registry can hold an unlimited number of images, so you only need one. However, if you\u2019re working with multiple people, you may want to create a registry per-project so you can selectively give access to the developers who need to push images. Once your registry is created, make note of the registry url and the username , and password. On your local instance of docker, open a command prompt and enter docker login <registry-url> .","title":"Understand Container Registries"},{"location":"user_guide/how-to/building-images/#make-use-of-our-metadata-service","text":"When building multi-container services, you can leverage our Metadata service to automate the configuration step of your application. For example, in our Elasticsearch image, we bundle a nginx container to provide an auth layer in front of ElasticSearch. We use the metadata service to discover the ElasticSearch instances and reconfigure the nginx load balancer automatically.","title":"Make use of our Metadata service"},{"location":"user_guide/how-to/building-images/#external-resources","text":"Here are some great external resources to review: ComputeStacks docker image library Dockerfile reference Bitnami docker images","title":"External Resources"},{"location":"user_guide/how-to/building-images/#recommended-best-practices","text":"Don\u2019t reinvent the wheel Try to use well-maintained images as the foundation for your custom image. Enable SFTP Access To enable SFTP access to your container, you will need to ensure file permissions are set correctly. For this to work, you will need the match the UID/GID of the user in your container, with the user of the SFTP/SSH container. Here is an example from a Dockerfile for our PHP image: RUN usermod -u 1001 www-data \\ && groupmod -g 1001 www-data You will also need to make sure you run chown -R on any files added to the container during the build process. This can be done as another RUN command, or as part of your entrypoint script. You may also want to rest all file/folder permissions with something like this: find . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Don\u2019t hardcode configuration Do not hard code any database credentials, or other configuration that requires up front knowledge of the environment. Instead, make all the options configurable as ENV variables that are accessible to an entrypoint script that can configure your application at run time. See our Wordpress image as an example. Our entrypoint script takes the database settings from the environment, and configures the wordpress database settings. Adjust your webserver to retrieve the real IP of your visitors Your application will sit behind the ComputeStacks load balancer. This means your application will not have direct access to the real remote address of the visitor. In order to access that data, you will need to read the header X-Forwarded-For . Prevent SSL \u2018Too many redirects\u2019 error By default, most images are configured to listen on port 80 with the global load balancer performing SSL offloading on your behalf. In this situation, your app may not realize that the user is connected over SSL and try to redirect them to 443 . In this scenario, you will most likely have a redirect error. To accurately determine the protocol that the user is connecting over, you should look for the HTTP_X_FORWARDED_PROTO header being sent by our load balancer. Additionally, if you would like to also secure the connection between the application and our load balancer, you can optionally enable the Backend SSL setting in the appropriate ingress rule. For example, in our Wordpress image, we use: <?php if ( isset ( $_SERVER [ 'HTTP_X_FORWARDED_PROTO' ]) && $_SERVER [ 'HTTP_X_FORWARDED_PROTO' ] === 'https' ) { $_SERVER [ 'HTTPS' ] = 'on' ; } Persist your data in volumes By default, all docker containers are stateless. This means that the data within the container can go away at any time. To avoid losing data, it\u2019s important you define Volumes within ComputeStacks. ComputeStacks has no awareness of your Dockerfile, therefore volumes defined in your Dockerfile will have no effect. You must define them in ComputeStacks. Test your image! Be sure to test your image thoroughly before pushing to ComputeStacks. While we offer a lot of insight and data into your running container, the iterative process of resolving issues will be much faster locally then within the ComputeStacks environment.","title":"Recommended Best Practices"},{"location":"user_guide/how-to/building-images/#define-your-image","text":"Now that you\u2019ve built, tested, and pushed, your image, it\u2019s time to configure it in ComputeStacks.","title":"Define Your Image"},{"location":"user_guide/how-to/building-images/#add-your-image","text":"You have two options when creating your image in ComputeStacks. If you\u2019re using our built-in container registry, then you can navigate to your regsitry and click the tag you want to use. This will take you to the new image page with the registry details pre-filled out. To create an image hosted elsewhere, create a new image directly from the image section and enter the details. Enable Scaling Does your image support horizontal scaling? If so, check this box and you\u2019ll be able to scale the app once it\u2019s deployed. On this screen you will notice a Command setting: This is how you can pass parameters directly to process running within the container. Here are some examples of how to use that setting: MySQL & MariaDB, we set the following command: --max_allowed_packet=268435456 . For Redis, we enable password authentication by referencing the password setting : /bin/sh -c redis-server --requirepass password is the name of a setting we defined for this image. see below . Use /bin/sh when overriding the command If you\u2019re trying to override the command itself and not just pass extra parameters, enclose your command with /bin/sh -c .","title":"Add your image"},{"location":"user_guide/how-to/building-images/#configure-parameters","text":"Here are two examples from our Wordpress service:","title":"Configure Parameters"},{"location":"user_guide/how-to/clone-project/","text":"How to clone a project \u00b6 Currently, there is no automated way of cloning a project. This feature is on our roadmap, but for now the process is manual. Consider Images Instead This guide is really designed for one-off situations. If you think you will ever have to do this more than once, I highly recommend you create custom docker images instead. Back Up Your Data! Before performing any of these steps, backup all your data (including databases)! We will be deleting files programmatically and it\u2019s possible to accidentally paste a command into the wrong server! This guide will walk you through cloning a project, while making use of the tools provided by ComputeStacks. We will be using command line tools, however you can also perform many of these steps by using an FTP client (SFTP protocol) and phpMyAdmin. In our example, we are using a standard wordpress site, and many of our commands below will include names and IP addresses that are unique to our project. Please be sure to update them according to your project. Overview \u00b6 Here is an overview of the steps we will be performing: Creating a new project with identical containers Syncing data from the old wordpress site to the new one Taking a mysql backup and restoring it in the new database container Changing the domain in wordpress Create New Project \u00b6 Our first step is to create a new project with wordpress and MariaDB. If you were also using redis, you would add that container now. When choosing packages, I recommend sticking with similar plans, or greater. Otherwise you may run into performance issues when importing the site data. Once the project is started, navigate to the newly created project and turn off the wordpress container . Sync Data \u00b6 To make things easier, I recommend keeping two browser tabs open: 1 on the new project, and 1 on the old project. You will need to navigate to the SFTP detail page for each project and make note of the IP address, port, directory path, and ssh password. ssh into the old project\u2019s ssh container and dump the database How do I find the database name? The database name will be the machine name of the service, without any dashes. You can either look at the wp-config.php file for the database name, or most likely it will be the only non-system database in mysql. In that case, you can just look at all databases with: Note The -p flag below will prompt for the password, so you won\u2019t be able to copy-paste the entire command into your terminal. mysql -h 10 .10.123.10 -u root -p show databases ; exit ssh -p 15000 sftpuser@100.100.100.100 cd ~/apps/boring-blackwell52/wordpress/html mysqldump -u root -p mydatabase > mydatabase.sql ssh into the new project\u2019s ssh container and wipe out the existing wordpress site. Save DB settings Before wiping out the default wordpress installation on the new container, I recommend copy/pasting the database configuration from the wp-config.php into a local text editor. We will need to change the old wp-config.php file to match the new one later one. wp-config.php <?php /** The name of the database for WordPress */ define ( 'DB_NAME' , 'boringbohr55' ); /** MySQL database username */ define ( 'DB_USER' , 'root' ); /** MySQL database password */ define ( 'DB_PASSWORD' , '4x1QlUf8w9XCWa' ); /** MySQL hostname */ define ( 'DB_HOST' , '10.10.50.23' ); ssh -p 16000 sftpuser@100.100.100.100 cd ~/apps/boring-bohr55/wordpress/html && rm -rf wordpress/* Copy data from the old container to the new one. Where do I find the directory paths used in your example? If you navigate to the login/setup page of your service (where the SFTP details are stored) , you will see a section called SFTP Volume Paths . rsync -e 'ssh -p 15000' -aP sftpuser@100.100.100.100:/home/sftpuser/apps/boring-blackwell52/wordpress/html/wordpress/ wordpress/ scp -P 15000 sftpuser@100.100.100.100:/home/sftpuser/apps/boring-blackwell52/wordpress/html/mydatabase.sql . Import database See the tip in (1) on how to find the database name. Reset New Database The new database will be pre-populated with a fresh wordpress install. Lets wipe that out. mysql -h 10 .10.50.23 -u root -p drop database new-database ; create database new-database ; exit Import database With a fresh database, lets import our data. cd ~/apps/boring-bohr55/wordpress/html mysql -u root -p new-database < mydatabase.sql Update wp-config.php \u00b6 Update the newly-migrated wordpress site\u2019s wp-config.php with the new database configuration. If you saved the settings into your text editor from step (2), you can simply copy/paste them back. Update the wordpress domain \u00b6 Installed on our ssh containers is the wp-cli . We will use that to programmatically change our domain name. Here is an example: cd ~/apps/boring-bohr55/wordpress/html/wordpress wp search-replace 'myoldwordpress-site.com' 'my-new-website.com' Tip for moving from www to non-www. If your old site had a domain in the form of www.example.com and you\u2019re moving to newsite.com , then run the search-replace function twice, but start with the www one. wp search-replace ` www.example.com ` ` newsite.com ` wp search-replace ` example.com ` ` newsite.com `","title":"Cloning Projects"},{"location":"user_guide/how-to/clone-project/#how-to-clone-a-project","text":"Currently, there is no automated way of cloning a project. This feature is on our roadmap, but for now the process is manual. Consider Images Instead This guide is really designed for one-off situations. If you think you will ever have to do this more than once, I highly recommend you create custom docker images instead. Back Up Your Data! Before performing any of these steps, backup all your data (including databases)! We will be deleting files programmatically and it\u2019s possible to accidentally paste a command into the wrong server! This guide will walk you through cloning a project, while making use of the tools provided by ComputeStacks. We will be using command line tools, however you can also perform many of these steps by using an FTP client (SFTP protocol) and phpMyAdmin. In our example, we are using a standard wordpress site, and many of our commands below will include names and IP addresses that are unique to our project. Please be sure to update them according to your project.","title":"How to clone a project"},{"location":"user_guide/how-to/clone-project/#overview","text":"Here is an overview of the steps we will be performing: Creating a new project with identical containers Syncing data from the old wordpress site to the new one Taking a mysql backup and restoring it in the new database container Changing the domain in wordpress","title":"Overview"},{"location":"user_guide/how-to/clone-project/#create-new-project","text":"Our first step is to create a new project with wordpress and MariaDB. If you were also using redis, you would add that container now. When choosing packages, I recommend sticking with similar plans, or greater. Otherwise you may run into performance issues when importing the site data. Once the project is started, navigate to the newly created project and turn off the wordpress container .","title":"Create New Project"},{"location":"user_guide/how-to/clone-project/#sync-data","text":"To make things easier, I recommend keeping two browser tabs open: 1 on the new project, and 1 on the old project. You will need to navigate to the SFTP detail page for each project and make note of the IP address, port, directory path, and ssh password. ssh into the old project\u2019s ssh container and dump the database How do I find the database name? The database name will be the machine name of the service, without any dashes. You can either look at the wp-config.php file for the database name, or most likely it will be the only non-system database in mysql. In that case, you can just look at all databases with: Note The -p flag below will prompt for the password, so you won\u2019t be able to copy-paste the entire command into your terminal. mysql -h 10 .10.123.10 -u root -p show databases ; exit ssh -p 15000 sftpuser@100.100.100.100 cd ~/apps/boring-blackwell52/wordpress/html mysqldump -u root -p mydatabase > mydatabase.sql ssh into the new project\u2019s ssh container and wipe out the existing wordpress site. Save DB settings Before wiping out the default wordpress installation on the new container, I recommend copy/pasting the database configuration from the wp-config.php into a local text editor. We will need to change the old wp-config.php file to match the new one later one. wp-config.php <?php /** The name of the database for WordPress */ define ( 'DB_NAME' , 'boringbohr55' ); /** MySQL database username */ define ( 'DB_USER' , 'root' ); /** MySQL database password */ define ( 'DB_PASSWORD' , '4x1QlUf8w9XCWa' ); /** MySQL hostname */ define ( 'DB_HOST' , '10.10.50.23' ); ssh -p 16000 sftpuser@100.100.100.100 cd ~/apps/boring-bohr55/wordpress/html && rm -rf wordpress/* Copy data from the old container to the new one. Where do I find the directory paths used in your example? If you navigate to the login/setup page of your service (where the SFTP details are stored) , you will see a section called SFTP Volume Paths . rsync -e 'ssh -p 15000' -aP sftpuser@100.100.100.100:/home/sftpuser/apps/boring-blackwell52/wordpress/html/wordpress/ wordpress/ scp -P 15000 sftpuser@100.100.100.100:/home/sftpuser/apps/boring-blackwell52/wordpress/html/mydatabase.sql . Import database See the tip in (1) on how to find the database name. Reset New Database The new database will be pre-populated with a fresh wordpress install. Lets wipe that out. mysql -h 10 .10.50.23 -u root -p drop database new-database ; create database new-database ; exit Import database With a fresh database, lets import our data. cd ~/apps/boring-bohr55/wordpress/html mysql -u root -p new-database < mydatabase.sql","title":"Sync Data"},{"location":"user_guide/how-to/clone-project/#update-wp-configphp","text":"Update the newly-migrated wordpress site\u2019s wp-config.php with the new database configuration. If you saved the settings into your text editor from step (2), you can simply copy/paste them back.","title":"Update wp-config.php"},{"location":"user_guide/how-to/clone-project/#update-the-wordpress-domain","text":"Installed on our ssh containers is the wp-cli . We will use that to programmatically change our domain name. Here is an example: cd ~/apps/boring-bohr55/wordpress/html/wordpress wp search-replace 'myoldwordpress-site.com' 'my-new-website.com' Tip for moving from www to non-www. If your old site had a domain in the form of www.example.com and you\u2019re moving to newsite.com , then run the search-replace function twice, but start with the www one. wp search-replace ` www.example.com ` ` newsite.com ` wp search-replace ` example.com ` ` newsite.com `","title":"Update the wordpress domain"},{"location":"user_guide/how-to/moving/","text":"How to migrate an existing application \u00b6 Overview \u00b6 When onboarding a new application to ComputeStacks, there are two directions you can go: Traditional containerized application deployment process. \u00b6 This is typically used by developers, or users with container experience. The application will be packaged into the container itself and will not enable SFTP access to the container. This allows for versioned containers and integration with build pipelines (CI). Traditional FTP/SFTP setup \u00b6 This would be the legacy web hosting model where the user will login using their FTP/SFTP application of choice. All of our current marketplace images (Wordpress, PHP, Magento, etc) follow this model. We have a standardized image without any application data stored in the container. You will upload their application to the volume using the SSH/SFTP container attached to their project. This guide will focus on #2: Migrating a custom application from a traditional hosting environment, while maintaining the SFTP access they\u2019re used to. Throughout this application, we will be using a demo php/mysql application as our example. Survey Existing Application \u00b6 Our first step is to survey their existing application and determine which containers we will need, and if we need to build anything for their application. In general, our goal is to reuse existing images that we already have built, and make modifications using the existing tools (e.g. htaccess , cron jobs ), rather than build a custom image that we then need to maintain. Identify Data Persistence Requirements \u00b6 What kind of data is being stored, and where is being stored currently? If the application is expecting data to be persisted outside of a standard directory structure, we may need to build a custom image. With ComputeStacks, you can have as many volumes as you want. However, our backup system will backup each volume separately, so we recommend trying to keep each image to only a single volume to ensure a consistent backup. Required Services \u00b6 Containers in general expect there to be only a single running process. If this application has multiple services running, then we may need to create custom images and break out each service into their own service. Here are some common examples of dependent services that we need to deploy. Mail How does the application deal with mail? Many php applications rely on sendmail being available, however our container images do not directly support sending mail and many providers specifically block outbound mail from their platform. We recommend using a commercial service for sending mail. This provides a better experience for your users (better email deliverability), less support requests, and less work for your support team since they won\u2019t have to deal with outbound spam. Here are a few providers we recommend: Postmark , Sendgrid , AmazonSES . You can optionally use an SMTP container like MailHog to process mail. Redis Redis is very easy to add to your application with ComputeStacks, simply choose it from the store. One thing to note is that our image does not persist data, it is configured as an in-memory store only. If the application requires redis to persist data through restarts, you will want to create your own and add a volume to it. Cron Jobs Our PHP images do run the cron daemon inside the same container. This makes it easy to migrate existing web applications over. When you SFTP or SSH into your container, you will see a file in the root of the volume called crontab. Add your cronjobs here and restart the container for them to be installed. Inside of the container the full path will be /var/www/html/crontab and not /home/sftpuser/apps/<service-name>/webroot/crontab . Identify Configuration Strategy \u00b6 Each application will configuration differently, but they can generally be drilled down to two different strategies: Configuration Files, and Environmental Parameters. When migrating your application to ComputeStacks, review the configuration files and see how they expect configuration data to be passed to it. In our example, the developer is using Environmental Parameters stored in a .env file, so that is how we will proceed. Configuration Files With configuration files, all the database parameters, session keys, etc., are stored in plain text files on the volume. This is how, for example, Wordpress manages their configuration. Environmental Parameters With environmental parameters, the configuration files will reference the environment for the value. This is the preferred method of configuration because it means your application can easily be moved to a different environment, without having to modify any files. Launching Containers \u00b6 For this example, create a new project with: MariaDB 10.4, PHP 7.3 with OpenLiteSpeed, Redis, and phpMyAdmin. MariaDB 10.4 \u00b6 Once you launch the container, we will need to manually create the database and import their database backup. On the main project page that lists all the containers in your project, click login on the MariaDB container. This will provide you your link to phpMyAdmin and the root password. I recommend matching the new database collation to the existing database you\u2019re importing. If you look at the database export and find one of the CREATE TABLE statements, you should see at the end the line COLLATE= . Try to match that in phpMyAdmin. After creating the database, navigate to the Import tab and upload your database dump. PHP & OpenLiteSpeed \u00b6 Our PHP 7.3 container, which is powered by OpenLiteSpeed, comes with a great web administrator. We will use this to make final configuration changes to the container. However, first we need to upload our application. Using either SFTP or rsync, move the application to the volume. Below is an example using rsync to upload our application to our example container jovial-poitras82 . Importing data and setting up the webserver In this example we are using the ip 1.1.1.1 and port 29656 . You need to change these to the values listed for your specific application in ComputeStacks! # Step 1: is the clear out the sample application included in the container ssh -p 29656 sftpuser@1.1.1.1 rm ~/apps/jovial-poitras82/webroot/html/default/index.php rm ~/apps/jovial-poitras82/webroot/html/default/info.php exit # Step 2: is to rsync the files cd /path/to/my/app rsync -e 'ssh -p 29656' -aP . sftpuser@1.1.1.1:apps/jovial-poitras82/webroot/html/default/ Reset File Permissions The third step is to reset file permissions. Regardless of how you got the files onto the server, most likely the folder/file permissions are incorrect and will result in a 403 FORBIDDEN error page. # Step 1: SSH back into the ssh container ssh -p 29656 sftpuser@1.1.1.1 # Step 2: Navigate to the root of the application cd ~/apps/jovial-poitras82/webroot/html/default # Step 3: Reset folder permissions find . -type d -exec chmod 755 {} \\; # Step 4: Reset file permissions (Note: Depending on how many files you have, this can take several minutes) find . -type f -exec chmod 644 {} \\; # Step 5: Review the application specific recommendations for file/folder permissions and adjust accordingly. # Step 6: Although not always required, if you still see 403 forbidden errors, you may need to restart the container. Once it\u2019s deployed, navigate to the main service page and locate the web administrator URL and password. The password will be labeled Litespeed Password , and the URL will be the one routed to port 7080 . Click that and login. The default configuration for our PHP 7.3 Litespeed image expects the application to live in /var/www/html/default, however symfony uses a different application structure where the index lives below the public/ directory, so we will need to adjust the default vhost. Login to the web administrator and navigate to Virtual Hosts and click on Default to view the default virtual host. Click the edit button in the top right corner of the first section (Base) to edit the section. Ensure that the Virtual Host Root is /var/www/html/default . Click the General tab and edit the first box (Also General). Set the Document Root to $VH_ROOT/public. Click the icon to save your changes. Now we need to reload the webserver. You can do this by restarting the container, or issuing a graceful restart in the web administrator. Click the server name below the word \u2018OpenLiteSpeed\u2019 in the upper left-hand corner. Choose graceful restart. Configuring container to link to other required containers As stated previously, we will be using environmental parameters to pass configuration data to our application. Back in the ComputeStacks interface, navigate to the service overview page, click on the gear icon and choose Environment. Here you will see a list of the existing environmental parameters, click the icon to add a new one. We will be creating the following environmental parameters for our service: DATABASE_URL In our example, this is in the form: mysql://username:password@ip-address/databasename . Our username will be root, and the ip address will be the direct local IP of the mariadb container. APP_SECRET APP_ENV MAILER_URL In our example, this is in the form: smtp://username:password@mailserver MAILER_FROM MAILER_TEST After you have added all the environmental parameters, you will need to issue a rebuild of your container.","title":"Migrating Existing Application"},{"location":"user_guide/how-to/moving/#how-to-migrate-an-existing-application","text":"","title":"How to migrate an existing application"},{"location":"user_guide/how-to/moving/#overview","text":"When onboarding a new application to ComputeStacks, there are two directions you can go:","title":"Overview"},{"location":"user_guide/how-to/moving/#traditional-containerized-application-deployment-process","text":"This is typically used by developers, or users with container experience. The application will be packaged into the container itself and will not enable SFTP access to the container. This allows for versioned containers and integration with build pipelines (CI).","title":"Traditional containerized application deployment process."},{"location":"user_guide/how-to/moving/#traditional-ftpsftp-setup","text":"This would be the legacy web hosting model where the user will login using their FTP/SFTP application of choice. All of our current marketplace images (Wordpress, PHP, Magento, etc) follow this model. We have a standardized image without any application data stored in the container. You will upload their application to the volume using the SSH/SFTP container attached to their project. This guide will focus on #2: Migrating a custom application from a traditional hosting environment, while maintaining the SFTP access they\u2019re used to. Throughout this application, we will be using a demo php/mysql application as our example.","title":"Traditional FTP/SFTP setup"},{"location":"user_guide/how-to/moving/#survey-existing-application","text":"Our first step is to survey their existing application and determine which containers we will need, and if we need to build anything for their application. In general, our goal is to reuse existing images that we already have built, and make modifications using the existing tools (e.g. htaccess , cron jobs ), rather than build a custom image that we then need to maintain.","title":"Survey Existing Application"},{"location":"user_guide/how-to/moving/#identify-data-persistence-requirements","text":"What kind of data is being stored, and where is being stored currently? If the application is expecting data to be persisted outside of a standard directory structure, we may need to build a custom image. With ComputeStacks, you can have as many volumes as you want. However, our backup system will backup each volume separately, so we recommend trying to keep each image to only a single volume to ensure a consistent backup.","title":"Identify Data Persistence Requirements"},{"location":"user_guide/how-to/moving/#required-services","text":"Containers in general expect there to be only a single running process. If this application has multiple services running, then we may need to create custom images and break out each service into their own service. Here are some common examples of dependent services that we need to deploy.","title":"Required Services"},{"location":"user_guide/how-to/moving/#identify-configuration-strategy","text":"Each application will configuration differently, but they can generally be drilled down to two different strategies: Configuration Files, and Environmental Parameters. When migrating your application to ComputeStacks, review the configuration files and see how they expect configuration data to be passed to it. In our example, the developer is using Environmental Parameters stored in a .env file, so that is how we will proceed.","title":"Identify Configuration Strategy"},{"location":"user_guide/how-to/moving/#launching-containers","text":"For this example, create a new project with: MariaDB 10.4, PHP 7.3 with OpenLiteSpeed, Redis, and phpMyAdmin.","title":"Launching Containers"},{"location":"user_guide/how-to/moving/#mariadb-104","text":"Once you launch the container, we will need to manually create the database and import their database backup. On the main project page that lists all the containers in your project, click login on the MariaDB container. This will provide you your link to phpMyAdmin and the root password. I recommend matching the new database collation to the existing database you\u2019re importing. If you look at the database export and find one of the CREATE TABLE statements, you should see at the end the line COLLATE= . Try to match that in phpMyAdmin. After creating the database, navigate to the Import tab and upload your database dump.","title":"MariaDB 10.4"},{"location":"user_guide/how-to/moving/#php-openlitespeed","text":"Our PHP 7.3 container, which is powered by OpenLiteSpeed, comes with a great web administrator. We will use this to make final configuration changes to the container. However, first we need to upload our application. Using either SFTP or rsync, move the application to the volume. Below is an example using rsync to upload our application to our example container jovial-poitras82 . Importing data and setting up the webserver In this example we are using the ip 1.1.1.1 and port 29656 . You need to change these to the values listed for your specific application in ComputeStacks! # Step 1: is the clear out the sample application included in the container ssh -p 29656 sftpuser@1.1.1.1 rm ~/apps/jovial-poitras82/webroot/html/default/index.php rm ~/apps/jovial-poitras82/webroot/html/default/info.php exit # Step 2: is to rsync the files cd /path/to/my/app rsync -e 'ssh -p 29656' -aP . sftpuser@1.1.1.1:apps/jovial-poitras82/webroot/html/default/ Reset File Permissions The third step is to reset file permissions. Regardless of how you got the files onto the server, most likely the folder/file permissions are incorrect and will result in a 403 FORBIDDEN error page. # Step 1: SSH back into the ssh container ssh -p 29656 sftpuser@1.1.1.1 # Step 2: Navigate to the root of the application cd ~/apps/jovial-poitras82/webroot/html/default # Step 3: Reset folder permissions find . -type d -exec chmod 755 {} \\; # Step 4: Reset file permissions (Note: Depending on how many files you have, this can take several minutes) find . -type f -exec chmod 644 {} \\; # Step 5: Review the application specific recommendations for file/folder permissions and adjust accordingly. # Step 6: Although not always required, if you still see 403 forbidden errors, you may need to restart the container. Once it\u2019s deployed, navigate to the main service page and locate the web administrator URL and password. The password will be labeled Litespeed Password , and the URL will be the one routed to port 7080 . Click that and login. The default configuration for our PHP 7.3 Litespeed image expects the application to live in /var/www/html/default, however symfony uses a different application structure where the index lives below the public/ directory, so we will need to adjust the default vhost. Login to the web administrator and navigate to Virtual Hosts and click on Default to view the default virtual host. Click the edit button in the top right corner of the first section (Base) to edit the section. Ensure that the Virtual Host Root is /var/www/html/default . Click the General tab and edit the first box (Also General). Set the Document Root to $VH_ROOT/public. Click the icon to save your changes. Now we need to reload the webserver. You can do this by restarting the container, or issuing a graceful restart in the web administrator. Click the server name below the word \u2018OpenLiteSpeed\u2019 in the upper left-hand corner. Choose graceful restart.","title":"PHP &amp; OpenLiteSpeed"},{"location":"user_guide/third-party/cloudflare/","text":"Integrating Cloudflare with ComputeStacks \u00b6 ComputeStacks offers a number of integration points to enable seamless integration with Cloudflare. Real IP \u00b6 We automatically accept the real visitor IP header from cloudflare and pass that along to your application as our standard real ip header. (see tip about real IP here ). CloudFlare Access & Restricting Traffic \u00b6 You can block all external traffic to your site, and only allow traffic originating from Cloudflare. This offers a number advantages for Cloudflare enabled sites: Ensure malicious users are not bypassing Cloudflare\u2019s WAF When paired with Cloudflare access , provide a safe way of blocking access to unauthenticated users. Ensure users are not bypassing your Cloudflare cache and increasing your bandwidth costs","title":"Cloudflare"},{"location":"user_guide/third-party/cloudflare/#integrating-cloudflare-with-computestacks","text":"ComputeStacks offers a number of integration points to enable seamless integration with Cloudflare.","title":"Integrating Cloudflare with ComputeStacks"},{"location":"user_guide/third-party/cloudflare/#real-ip","text":"We automatically accept the real visitor IP header from cloudflare and pass that along to your application as our standard real ip header. (see tip about real IP here ).","title":"Real IP"},{"location":"user_guide/third-party/cloudflare/#cloudflare-access-restricting-traffic","text":"You can block all external traffic to your site, and only allow traffic originating from Cloudflare. This offers a number advantages for Cloudflare enabled sites: Ensure malicious users are not bypassing Cloudflare\u2019s WAF When paired with Cloudflare access , provide a safe way of blocking access to unauthenticated users. Ensure users are not bypassing your Cloudflare cache and increasing your bandwidth costs","title":"CloudFlare Access &amp; Restricting Traffic"}]}